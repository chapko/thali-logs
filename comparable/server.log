2017-02-09 13:37:31 - INFO HttpServer: 'listening on *:9990'
2017-02-09 13:38:05 - DEBUG HttpServer: 'device presented, name: 'Apple-Walter', uuid: '117ad5b8-7682-496f-846e-2c8a644b3d95', platformName: 'ios', type: 'unittest', hasRequiredHardware: 'true', nativeUTFailed: 'false''
2017-02-09 13:38:05 - DEBUG TestFramework: 'device added, name: 'Apple-Walter''
2017-02-09 13:38:05 - DEBUG HttpServer: 'device presented, name: 'Apple-White', uuid: 'b060122f-634f-4748-aad8-391f422ce2dc', platformName: 'ios', type: 'unittest', hasRequiredHardware: 'true', nativeUTFailed: 'false''
2017-02-09 13:38:05 - DEBUG TestFramework: 'device added, name: 'Apple-White''
2017-02-09 13:38:25 - DEBUG HttpServer: 'device presented, name: 'Apple-Rockwell iPhone', uuid: 'f6f4556d-1d4d-4c74-9665-77b6058d2ca8', platformName: 'ios', type: 'unittest', hasRequiredHardware: 'true', nativeUTFailed: 'false''
2017-02-09 13:38:25 - DEBUG TestFramework: 'device added, name: 'Apple-Rockwell iPhone''
2017-02-09 13:38:25 - INFO TestFramework: 'all required 3 devices are present for platformName: 'ios''
2017-02-09 13:38:25 - DEBUG UnitTestFramework: 'starting unit tests on 3 devices, platformName: 'ios''
2017-02-09 13:38:25 - DEBUG UnitTestFramework: 'scheduling tests'
2017-02-09 13:38:25 - DEBUG UnitTestFramework: 'tests scheduled'
2017-02-09 13:38:25 - DEBUG UnitTestFramework: '#setup: 'test write''
2017-02-09 13:38:26 - DEBUG UnitTestFramework: '#setup ok: 'test write''
2017-02-09 13:38:26 - DEBUG UnitTestFramework: '#run: 'test write''
2017-02-09 13:38:31 - DEBUG UnitTestFramework: '#run ok: 'test write''
2017-02-09 13:38:31 - DEBUG UnitTestFramework: '#teardown: 'test write''
2017-02-09 13:38:32 - DEBUG UnitTestFramework: '#teardown ok: 'test write''
2017-02-09 13:38:32 - DEBUG UnitTestFramework: '#setup: 'test repeat write 1''
2017-02-09 13:38:33 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 1''
2017-02-09 13:38:33 - DEBUG UnitTestFramework: '#run: 'test repeat write 1''
2017-02-09 13:38:39 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 1''
2017-02-09 13:38:39 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 1''
2017-02-09 13:38:40 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 1''
2017-02-09 13:38:40 - DEBUG UnitTestFramework: '#setup: 'test repeat write 2''
2017-02-09 13:38:41 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 2''
2017-02-09 13:38:41 - DEBUG UnitTestFramework: '#run: 'test repeat write 2''
2017-02-09 13:38:45 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 2''
2017-02-09 13:38:45 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 2''
2017-02-09 13:38:47 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 2''
2017-02-09 13:38:47 - DEBUG UnitTestFramework: '#setup: 'test repeat write 3''
2017-02-09 13:38:48 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 3''
2017-02-09 13:38:48 - DEBUG UnitTestFramework: '#run: 'test repeat write 3''
2017-02-09 13:38:53 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 3''
2017-02-09 13:38:53 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 3''
2017-02-09 13:38:55 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 3''
2017-02-09 13:38:55 - DEBUG UnitTestFramework: '#setup: 'test repeat write 4''
2017-02-09 13:38:56 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 4''
2017-02-09 13:38:56 - DEBUG UnitTestFramework: '#run: 'test repeat write 4''
2017-02-09 13:39:00 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 4''
2017-02-09 13:39:00 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 4''
2017-02-09 13:39:02 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 4''
2017-02-09 13:39:02 - DEBUG UnitTestFramework: '#setup: 'test repeat write 5''
2017-02-09 13:39:03 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 5''
2017-02-09 13:39:03 - DEBUG UnitTestFramework: '#run: 'test repeat write 5''
2017-02-09 13:39:07 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 5''
2017-02-09 13:39:07 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 5''
2017-02-09 13:39:09 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 5''
2017-02-09 13:39:09 - DEBUG UnitTestFramework: '#setup: 'test repeat write 6''
2017-02-09 13:39:10 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 6''
2017-02-09 13:39:10 - DEBUG UnitTestFramework: '#run: 'test repeat write 6''
2017-02-09 13:39:16 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 6''
2017-02-09 13:39:16 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 6''
2017-02-09 13:39:18 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 6''
2017-02-09 13:39:18 - DEBUG UnitTestFramework: '#setup: 'test repeat write 7''
2017-02-09 13:39:19 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 7''
2017-02-09 13:39:19 - DEBUG UnitTestFramework: '#run: 'test repeat write 7''
2017-02-09 13:39:25 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 7''
2017-02-09 13:39:25 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 7''
2017-02-09 13:39:26 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 7''
2017-02-09 13:39:26 - DEBUG UnitTestFramework: '#setup: 'test repeat write 8''
2017-02-09 13:39:27 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 8''
2017-02-09 13:39:27 - DEBUG UnitTestFramework: '#run: 'test repeat write 8''
2017-02-09 13:39:34 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 8''
2017-02-09 13:39:34 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 8''
2017-02-09 13:39:36 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 8''
2017-02-09 13:39:36 - DEBUG UnitTestFramework: '#setup: 'test repeat write 9''
2017-02-09 13:39:37 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 9''
2017-02-09 13:39:37 - DEBUG UnitTestFramework: '#run: 'test repeat write 9''
2017-02-09 13:39:43 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 9''
2017-02-09 13:39:43 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 9''
2017-02-09 13:39:46 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 9''
2017-02-09 13:39:46 - DEBUG UnitTestFramework: '#setup: 'test repeat write 10''
2017-02-09 13:39:47 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 10''
2017-02-09 13:39:47 - DEBUG UnitTestFramework: '#run: 'test repeat write 10''
2017-02-09 13:39:54 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 10''
2017-02-09 13:39:54 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 10''
2017-02-09 13:39:57 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 10''
2017-02-09 13:39:57 - DEBUG UnitTestFramework: '#setup: 'closeAll can close even when connections open''
2017-02-09 13:39:58 - DEBUG UnitTestFramework: '#setup ok: 'closeAll can close even when connections open''
2017-02-09 13:39:58 - DEBUG UnitTestFramework: '#run: 'closeAll can close even when connections open''
2017-02-09 13:39:59 - DEBUG UnitTestFramework: '#run ok: 'closeAll can close even when connections open''
2017-02-09 13:39:59 - DEBUG UnitTestFramework: '#teardown: 'closeAll can close even when connections open''
2017-02-09 13:39:59 - DEBUG UnitTestFramework: '#teardown ok: 'closeAll can close even when connections open''
2017-02-09 13:39:59 - DEBUG UnitTestFramework: '#setup: 'closeAll with promise''
2017-02-09 13:40:00 - DEBUG UnitTestFramework: '#setup ok: 'closeAll with promise''
2017-02-09 13:40:00 - DEBUG UnitTestFramework: '#run: 'closeAll with promise''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#run ok: 'closeAll with promise''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#teardown: 'closeAll with promise''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#teardown ok: 'closeAll with promise''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#setup: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#setup ok: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:01 - DEBUG UnitTestFramework: '#run: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#run ok: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#teardown: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#teardown ok: 'closeAll properly throws when closing a non open server with eatNotRunning set to false''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#setup: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#setup ok: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:03 - DEBUG UnitTestFramework: '#run: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#run ok: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#teardown: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#teardown ok: 'closeAll works even with a server that is not listening yet witheatNotRunning set to true''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#setup: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#setup ok: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:04 - DEBUG UnitTestFramework: '#run: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:05 - DEBUG UnitTestFramework: '#run ok: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:05 - DEBUG UnitTestFramework: '#teardown: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:07 - DEBUG UnitTestFramework: '#teardown ok: 'Call of onCheckpointReached handler on a single db change''
2017-02-09 13:40:07 - DEBUG UnitTestFramework: '#setup: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:08 - DEBUG UnitTestFramework: '#setup ok: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:08 - DEBUG UnitTestFramework: '#run: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:09 - DEBUG UnitTestFramework: '#run ok: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:09 - DEBUG UnitTestFramework: '#teardown: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:10 - DEBUG UnitTestFramework: '#teardown ok: 'Call of multiple onCheckpointReached handlers on a single db change''
2017-02-09 13:40:10 - DEBUG UnitTestFramework: '#setup: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:11 - DEBUG UnitTestFramework: '#setup ok: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:11 - DEBUG UnitTestFramework: '#run: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:14 - DEBUG UnitTestFramework: '#run ok: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:14 - DEBUG UnitTestFramework: '#teardown: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:14 - DEBUG UnitTestFramework: '#teardown ok: 'Call of onCheckpointReached handler on multiple db changes that are in the checkpoints plugin delay interval''
2017-02-09 13:40:14 - DEBUG UnitTestFramework: '#setup: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:15 - DEBUG UnitTestFramework: '#setup ok: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:15 - DEBUG UnitTestFramework: '#run: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:17 - DEBUG UnitTestFramework: '#run ok: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:17 - DEBUG UnitTestFramework: '#teardown: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:18 - DEBUG UnitTestFramework: '#teardown ok: 'Call of onCheckpointReached handler on multiple db changes that are out of the checkpoints plugin delay interval''
2017-02-09 13:40:18 - DEBUG UnitTestFramework: '#setup: 'test defaultDirectory''
2017-02-09 13:40:19 - DEBUG UnitTestFramework: '#setup ok: 'test defaultDirectory''
2017-02-09 13:40:19 - DEBUG UnitTestFramework: '#run: 'test defaultDirectory''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#run ok: 'test defaultDirectory''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#teardown: 'test defaultDirectory''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#teardown ok: 'test defaultDirectory''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#setup: 'test defaultAdapter''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#setup ok: 'test defaultAdapter''
2017-02-09 13:40:20 - DEBUG UnitTestFramework: '#run: 'test defaultAdapter''
2017-02-09 13:40:21 - DEBUG UnitTestFramework: '#run ok: 'test defaultAdapter''
2017-02-09 13:40:21 - DEBUG UnitTestFramework: '#teardown: 'test defaultAdapter''
2017-02-09 13:40:22 - DEBUG UnitTestFramework: '#teardown ok: 'test defaultAdapter''
2017-02-09 13:40:22 - DEBUG UnitTestFramework: '#setup: 'enqueue and run in order''
2017-02-09 13:40:22 - DEBUG UnitTestFramework: '#setup ok: 'enqueue and run in order''
2017-02-09 13:40:22 - DEBUG UnitTestFramework: '#run: 'enqueue and run in order''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#run ok: 'enqueue and run in order''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#teardown: 'enqueue and run in order''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#teardown ok: 'enqueue and run in order''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#setup: 'enqueueAtTop and run backwards''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#setup ok: 'enqueueAtTop and run backwards''
2017-02-09 13:40:23 - DEBUG UnitTestFramework: '#run: 'enqueueAtTop and run backwards''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#run ok: 'enqueueAtTop and run backwards''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#teardown: 'enqueueAtTop and run backwards''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#teardown ok: 'enqueueAtTop and run backwards''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#setup: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#setup ok: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:24 - DEBUG UnitTestFramework: '#run: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:25 - DEBUG UnitTestFramework: '#run ok: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:25 - DEBUG UnitTestFramework: '#teardown: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:26 - DEBUG UnitTestFramework: '#teardown ok: 'mix enqueue and enqueueAtTop''
2017-02-09 13:40:26 - DEBUG UnitTestFramework: '#setup: 'queues handled independently''
2017-02-09 13:40:26 - DEBUG UnitTestFramework: '#setup ok: 'queues handled independently''
2017-02-09 13:40:26 - DEBUG UnitTestFramework: '#run: 'queues handled independently''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#run ok: 'queues handled independently''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#teardown: 'queues handled independently''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#teardown ok: 'queues handled independently''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#setup: 'basic''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#setup ok: 'basic''
2017-02-09 13:40:27 - DEBUG UnitTestFramework: '#run: 'basic''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#run ok: 'basic''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#teardown: 'basic''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#teardown ok: 'basic''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#setup: 'another''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#setup ok: 'another''
2017-02-09 13:40:28 - DEBUG UnitTestFramework: '#run: 'another''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#run ok: 'another''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#teardown: 'another''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#teardown ok: 'another''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#setup: 'can pass data in setup''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#setup ok: 'can pass data in setup''
2017-02-09 13:40:29 - DEBUG UnitTestFramework: '#run: 'can pass data in setup''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#run ok: 'can pass data in setup''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#teardown: 'can pass data in setup''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#teardown ok: 'can pass data in setup''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#setup: 'Correctly parses/stringifies USN''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#setup ok: 'Correctly parses/stringifies USN''
2017-02-09 13:40:30 - DEBUG UnitTestFramework: '#run: 'Correctly parses/stringifies USN''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#run ok: 'Correctly parses/stringifies USN''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#teardown: 'Correctly parses/stringifies USN''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#teardown ok: 'Correctly parses/stringifies USN''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#setup: 'onPeerLost calls jxcore''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#setup ok: 'onPeerLost calls jxcore''
2017-02-09 13:40:32 - DEBUG UnitTestFramework: '#run: 'onPeerLost calls jxcore''
2017-02-09 13:40:33 - INFO Socket: 'run skipped, test: 'onPeerLost calls jxcore', event: 'run_onPeerLost calls jxcore''
2017-02-09 13:40:33 - INFO Socket: 'run skipped, test: 'onPeerLost calls jxcore', event: 'run_onPeerLost calls jxcore''
2017-02-09 13:40:33 - INFO Socket: 'run skipped, test: 'onPeerLost calls jxcore', event: 'run_onPeerLost calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#run ok: 'onPeerLost calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#teardown: 'onPeerLost calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#teardown ok: 'onPeerLost calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#setup: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#setup ok: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:33 - DEBUG UnitTestFramework: '#run: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - INFO Socket: 'run skipped, test: 'onPeerDiscovered calls jxcore', event: 'run_onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - INFO Socket: 'run skipped, test: 'onPeerDiscovered calls jxcore', event: 'run_onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - INFO Socket: 'run skipped, test: 'onPeerDiscovered calls jxcore', event: 'run_onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#run ok: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#teardown: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#teardown ok: 'onPeerDiscovered calls jxcore''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#setup: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#setup ok: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:34 - DEBUG UnitTestFramework: '#run: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - INFO Socket: 'run skipped, test: 'cannot call connect when start listening for advertisements is not active', event: 'run_cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - INFO Socket: 'run skipped, test: 'cannot call connect when start listening for advertisements is not active', event: 'run_cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - INFO Socket: 'run skipped, test: 'cannot call connect when start listening for advertisements is not active', event: 'run_cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#run ok: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#teardown: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#teardown ok: 'cannot call connect when start listening for advertisements is not active''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#setup: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#setup ok: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:35 - DEBUG UnitTestFramework: '#run: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:35 - INFO Socket: 'run skipped, test: 'Get error when trying to double connect to a peer on Android', event: 'run_Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:36 - INFO Socket: 'run skipped, test: 'Get error when trying to double connect to a peer on Android', event: 'run_Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:36 - INFO Socket: 'run skipped, test: 'Get error when trying to double connect to a peer on Android', event: 'run_Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:36 - DEBUG UnitTestFramework: '#run ok: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:36 - DEBUG UnitTestFramework: '#teardown: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:37 - DEBUG UnitTestFramework: '#teardown ok: 'Get error when trying to double connect to a peer on Android''
2017-02-09 13:40:37 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:37 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:37 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:38 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:38 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:38 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:39 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection', event: 'run_#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:39 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:40 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:41 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:41 - INFO Socket: 'run skipped, test: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer', event: 'run_#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:41 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:41 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:42 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer''
2017-02-09 13:40:42 - DEBUG UnitTestFramework: '#setup: 'calling createNativeListener directly rejects''
2017-02-09 13:40:42 - DEBUG UnitTestFramework: '#setup ok: 'calling createNativeListener directly rejects''
2017-02-09 13:40:42 - DEBUG UnitTestFramework: '#run: 'calling createNativeListener directly rejects''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#run ok: 'calling createNativeListener directly rejects''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#teardown: 'calling createNativeListener directly rejects''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#teardown ok: 'calling createNativeListener directly rejects''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#setup: 'emits incomingConnectionState''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#setup ok: 'emits incomingConnectionState''
2017-02-09 13:40:43 - DEBUG UnitTestFramework: '#run: 'emits incomingConnectionState''
2017-02-09 13:40:44 - DEBUG UnitTestFramework: '#run ok: 'emits incomingConnectionState''
2017-02-09 13:40:44 - DEBUG UnitTestFramework: '#teardown: 'emits incomingConnectionState''
2017-02-09 13:40:45 - DEBUG UnitTestFramework: '#teardown ok: 'emits incomingConnectionState''
2017-02-09 13:40:45 - DEBUG UnitTestFramework: '#setup: 'emits routerPortConnectionFailed''
2017-02-09 13:40:45 - DEBUG UnitTestFramework: '#setup ok: 'emits routerPortConnectionFailed''
2017-02-09 13:40:45 - DEBUG UnitTestFramework: '#run: 'emits routerPortConnectionFailed''
2017-02-09 13:40:46 - DEBUG UnitTestFramework: '#run ok: 'emits routerPortConnectionFailed''
2017-02-09 13:40:46 - DEBUG UnitTestFramework: '#teardown: 'emits routerPortConnectionFailed''
2017-02-09 13:40:46 - DEBUG UnitTestFramework: '#teardown ok: 'emits routerPortConnectionFailed''
2017-02-09 13:40:46 - DEBUG UnitTestFramework: '#setup: 'native server connections all up''
2017-02-09 13:40:47 - DEBUG UnitTestFramework: '#setup ok: 'native server connections all up''
2017-02-09 13:40:47 - DEBUG UnitTestFramework: '#run: 'native server connections all up''
2017-02-09 13:40:49 - DEBUG UnitTestFramework: '#run ok: 'native server connections all up''
2017-02-09 13:40:49 - DEBUG UnitTestFramework: '#teardown: 'native server connections all up''
2017-02-09 13:40:50 - DEBUG UnitTestFramework: '#teardown ok: 'native server connections all up''
2017-02-09 13:40:50 - DEBUG UnitTestFramework: '#setup: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:50 - DEBUG UnitTestFramework: '#setup ok: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:50 - DEBUG UnitTestFramework: '#run: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#run ok: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#teardown: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#teardown ok: 'native server - closing incoming stream cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#setup: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#setup ok: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:51 - DEBUG UnitTestFramework: '#run: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:52 - DEBUG UnitTestFramework: '#run ok: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:52 - DEBUG UnitTestFramework: '#teardown: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:53 - DEBUG UnitTestFramework: '#teardown ok: 'native server - closing incoming connection cleans outgoing socket''
2017-02-09 13:40:53 - DEBUG UnitTestFramework: '#setup: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:53 - DEBUG UnitTestFramework: '#setup ok: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:53 - DEBUG UnitTestFramework: '#run: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:54 - DEBUG UnitTestFramework: '#run ok: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:54 - DEBUG UnitTestFramework: '#teardown: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:55 - DEBUG UnitTestFramework: '#teardown ok: 'native server - closing outgoing socket cleans associated mux stream''
2017-02-09 13:40:55 - DEBUG UnitTestFramework: '#setup: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:55 - DEBUG UnitTestFramework: '#setup ok: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:55 - DEBUG UnitTestFramework: '#run: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:56 - DEBUG UnitTestFramework: '#run ok: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:56 - DEBUG UnitTestFramework: '#teardown: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:57 - DEBUG UnitTestFramework: '#teardown ok: 'native server - closing the whole server cleans everything up''
2017-02-09 13:40:57 - DEBUG UnitTestFramework: '#setup: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:40:57 - DEBUG UnitTestFramework: '#setup ok: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:40:57 - DEBUG UnitTestFramework: '#run: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:40:59 - DEBUG UnitTestFramework: '#run ok: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:40:59 - DEBUG UnitTestFramework: '#teardown: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:41:00 - DEBUG UnitTestFramework: '#teardown ok: 'native server - we can get a ton of connections and data through and still clean up the server completely''
2017-02-09 13:41:00 - DEBUG UnitTestFramework: '#setup: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:00 - DEBUG UnitTestFramework: '#setup ok: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:00 - DEBUG UnitTestFramework: '#run: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:02 - DEBUG UnitTestFramework: '#run ok: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:02 - DEBUG UnitTestFramework: '#teardown: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:03 - DEBUG UnitTestFramework: '#teardown ok: 'native server - simulate mux failure, make sure everything is cleaned up''
2017-02-09 13:41:03 - DEBUG UnitTestFramework: '#setup: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:03 - DEBUG UnitTestFramework: '#setup ok: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:03 - DEBUG UnitTestFramework: '#run: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:04 - DEBUG UnitTestFramework: '#run ok: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:04 - DEBUG UnitTestFramework: '#teardown: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:05 - DEBUG UnitTestFramework: '#teardown ok: 'native server - timing out the incoming connection cleans everything up''
2017-02-09 13:41:05 - DEBUG UnitTestFramework: '#setup: 'can create servers manager''
2017-02-09 13:41:05 - DEBUG UnitTestFramework: '#setup ok: 'can create servers manager''
2017-02-09 13:41:05 - DEBUG UnitTestFramework: '#run: 'can create servers manager''
2017-02-09 13:41:06 - DEBUG UnitTestFramework: '#run ok: 'can create servers manager''
2017-02-09 13:41:06 - DEBUG UnitTestFramework: '#teardown: 'can create servers manager''
2017-02-09 13:41:07 - DEBUG UnitTestFramework: '#teardown ok: 'can create servers manager''
2017-02-09 13:41:07 - DEBUG UnitTestFramework: '#setup: 'calling stop without start causes error''
2017-02-09 13:41:07 - DEBUG UnitTestFramework: '#setup ok: 'calling stop without start causes error''
2017-02-09 13:41:07 - DEBUG UnitTestFramework: '#run: 'calling stop without start causes error''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#run ok: 'calling stop without start causes error''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#teardown: 'calling stop without start causes error''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#teardown ok: 'calling stop without start causes error''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#setup: 'can start/stop servers manager''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#setup ok: 'can start/stop servers manager''
2017-02-09 13:41:08 - DEBUG UnitTestFramework: '#run: 'can start/stop servers manager''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#run ok: 'can start/stop servers manager''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#teardown: 'can start/stop servers manager''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#teardown ok: 'can start/stop servers manager''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#setup: 'starting twice resolves with listening port''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#setup ok: 'starting twice resolves with listening port''
2017-02-09 13:41:09 - DEBUG UnitTestFramework: '#run: 'starting twice resolves with listening port''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#run ok: 'starting twice resolves with listening port''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#teardown: 'starting twice resolves with listening port''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#teardown ok: 'starting twice resolves with listening port''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#setup: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#setup ok: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:10 - DEBUG UnitTestFramework: '#run: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:11 - DEBUG UnitTestFramework: '#run ok: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:11 - DEBUG UnitTestFramework: '#teardown: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:13 - DEBUG UnitTestFramework: '#teardown ok: 'terminateIncomingConnection will terminate a connection''
2017-02-09 13:41:13 - DEBUG UnitTestFramework: '#setup: 'terminate an Outgoing connection''
2017-02-09 13:41:13 - DEBUG UnitTestFramework: '#setup ok: 'terminate an Outgoing connection''
2017-02-09 13:41:13 - DEBUG UnitTestFramework: '#run: 'terminate an Outgoing connection''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#run ok: 'terminate an Outgoing connection''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#teardown: 'terminate an Outgoing connection''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#teardown ok: 'terminate an Outgoing connection''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#setup: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#setup ok: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:14 - DEBUG UnitTestFramework: '#run: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#run ok: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#teardown: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#teardown ok: 'After #startListeningForAdvertisements call wifiPeerAvailabilityChanged events should be emitted''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:15 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening correctly updates USN''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:16 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening generates new peerIdentifier after #stopAdvertisingAndListening has been called''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:18 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening sends correct requests''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#setup: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#setup ok: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:19 - DEBUG UnitTestFramework: '#run: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#run ok: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#teardown: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#teardown ok: 'messages with invalid location or USN should be ignored''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#setup: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#setup ok: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:20 - DEBUG UnitTestFramework: '#run: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:22 - DEBUG UnitTestFramework: '#run ok: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:22 - DEBUG UnitTestFramework: '#teardown: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:23 - DEBUG UnitTestFramework: '#teardown ok: 'Delayed own message are still ignored after advertisement has been toggled on and off several times''
2017-02-09 13:41:23 - DEBUG UnitTestFramework: '#setup: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:23 - DEBUG UnitTestFramework: '#setup ok: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:23 - DEBUG UnitTestFramework: '#run: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#run ok: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#teardown: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#teardown ok: 'verify that Thali-specific messages are filtered correctly''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#setup: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#setup ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:24 - DEBUG UnitTestFramework: '#run: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#run ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#teardown: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#teardown ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:25 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#setup: '#start should fail if called twice in a row''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#setup ok: '#start should fail if called twice in a row''
2017-02-09 13:41:26 - DEBUG UnitTestFramework: '#run: '#start should fail if called twice in a row''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#run ok: '#start should fail if called twice in a row''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#teardown: '#start should fail if called twice in a row''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#teardown ok: '#start should fail if called twice in a row''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#setup: 'should not be started after stop is called''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#setup ok: 'should not be started after stop is called''
2017-02-09 13:41:28 - DEBUG UnitTestFramework: '#run: 'should not be started after stop is called''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#run ok: 'should not be started after stop is called''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#teardown: 'should not be started after stop is called''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#teardown ok: 'should not be started after stop is called''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:29 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening should fail invalid router has been passed''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:30 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening should fail if router server starting fails''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:31 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening should start hosting given router object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:33 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening bad psk should be rejected object''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#setup: '#stop can be called multiple times in a row''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#setup ok: '#stop can be called multiple times in a row''
2017-02-09 13:41:34 - DEBUG UnitTestFramework: '#run: '#stop can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#run ok: '#stop can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#teardown: '#stop can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#teardown ok: '#stop can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#setup: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#setup ok: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:35 - DEBUG UnitTestFramework: '#run: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:36 - DEBUG UnitTestFramework: '#run ok: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:36 - DEBUG UnitTestFramework: '#teardown: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:36 - DEBUG UnitTestFramework: '#teardown ok: '#startListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:36 - DEBUG UnitTestFramework: '#setup: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:37 - DEBUG UnitTestFramework: '#setup ok: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:37 - DEBUG UnitTestFramework: '#run: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#run ok: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#teardown: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#teardown ok: '#stopListeningForAdvertisements can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#setup: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#setup ok: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:38 - DEBUG UnitTestFramework: '#run: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#run ok: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#teardown: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#teardown ok: '#stopAdvertisingAndListening can be called multiple times in a row''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#setup: 'functions are run from a queue in the right order''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#setup ok: 'functions are run from a queue in the right order''
2017-02-09 13:41:39 - DEBUG UnitTestFramework: '#run: 'functions are run from a queue in the right order''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#run ok: 'functions are run from a queue in the right order''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#teardown: 'functions are run from a queue in the right order''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#teardown ok: 'functions are run from a queue in the right order''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#setup: 'does not get peer changes from self''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#setup ok: 'does not get peer changes from self''
2017-02-09 13:41:40 - DEBUG UnitTestFramework: '#run: 'does not get peer changes from self''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#run ok: 'does not get peer changes from self''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#teardown: 'does not get peer changes from self''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#teardown ok: 'does not get peer changes from self''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#setup: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#setup ok: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:43 - DEBUG UnitTestFramework: '#run: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:43 - INFO Socket: 'run skipped, test: 'Make sure we turn on and off the Android multicast locks', event: 'run_Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - INFO Socket: 'run skipped, test: 'Make sure we turn on and off the Android multicast locks', event: 'run_Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - INFO Socket: 'run skipped, test: 'Make sure we turn on and off the Android multicast locks', event: 'run_Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#run ok: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#teardown: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure we turn on and off the Android multicast locks''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#setup: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#setup ok: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:45 - DEBUG UnitTestFramework: '#run: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#run ok: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#teardown: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure we do not use Android locks when we are not on Android''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#setup: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#setup ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:46 - DEBUG UnitTestFramework: '#run: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#run ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#teardown: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#teardown ok: '#startListeningForAdvertisements should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#setup: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#setup ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:47 - DEBUG UnitTestFramework: '#run: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#run ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#teardown: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#teardown ok: '#startUpdateAdvertisingAndListening should fail if start not called''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#setup: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#setup ok: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:48 - DEBUG UnitTestFramework: '#run: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#run ok: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#teardown: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#teardown ok: 'should be able to call #stopListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#setup: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#setup ok: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:50 - DEBUG UnitTestFramework: '#run: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#run ok: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#teardown: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#teardown ok: 'should be able to call #startListeningForAdvertisements many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#setup: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#setup ok: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:51 - DEBUG UnitTestFramework: '#run: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#run ok: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#teardown: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#teardown ok: 'should be able to call #startUpdateAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#setup: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#setup ok: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:52 - DEBUG UnitTestFramework: '#run: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#run ok: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#teardown: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#teardown ok: 'should be able to call #stopAdvertisingAndListening many times''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#setup: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#setup ok: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:53 - DEBUG UnitTestFramework: '#run: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:54 - DEBUG UnitTestFramework: '#run ok: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:54 - DEBUG UnitTestFramework: '#teardown: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:55 - DEBUG UnitTestFramework: '#teardown ok: '#start - Causing native or wifi to fail will cause a promise reject ''
2017-02-09 13:41:55 - DEBUG UnitTestFramework: '#setup: '#start should fail if called twice in a row''
2017-02-09 13:41:55 - DEBUG UnitTestFramework: '#setup ok: '#start should fail if called twice in a row''
2017-02-09 13:41:55 - DEBUG UnitTestFramework: '#run: '#start should fail if called twice in a row''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#run ok: '#start should fail if called twice in a row''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#teardown: '#start should fail if called twice in a row''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#teardown ok: '#start should fail if called twice in a row''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#setup: '#stop should clear watchers and change peers''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#setup ok: '#stop should clear watchers and change peers''
2017-02-09 13:41:56 - DEBUG UnitTestFramework: '#run: '#stop should clear watchers and change peers''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#run ok: '#stop should clear watchers and change peers''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#teardown: '#stop should clear watchers and change peers''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#teardown ok: '#stop should clear watchers and change peers''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#setup: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#setup ok: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:57 - DEBUG UnitTestFramework: '#run: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - INFO Socket: 'run skipped, test: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)', event: 'run_#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - INFO Socket: 'run skipped, test: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)', event: 'run_#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - INFO Socket: 'run skipped, test: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)', event: 'run_#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#run ok: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#teardown: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#teardown ok: '#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#setup: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#setup ok: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:41:58 - DEBUG UnitTestFramework: '#run: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:41:59 - DEBUG UnitTestFramework: '#run ok: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:41:59 - DEBUG UnitTestFramework: '#teardown: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:42:00 - DEBUG UnitTestFramework: '#teardown ok: 'does not emit duplicate discoveryAdvertisingStateUpdate''
2017-02-09 13:42:00 - DEBUG UnitTestFramework: '#setup: 'does not send duplicate availability changes''
2017-02-09 13:42:00 - DEBUG UnitTestFramework: '#setup ok: 'does not send duplicate availability changes''
2017-02-09 13:42:00 - DEBUG UnitTestFramework: '#run: 'does not send duplicate availability changes''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#run ok: 'does not send duplicate availability changes''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#teardown: 'does not send duplicate availability changes''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#teardown ok: 'does not send duplicate availability changes''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#setup: 'can get the network status''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#setup ok: 'can get the network status''
2017-02-09 13:42:01 - DEBUG UnitTestFramework: '#run: 'can get the network status''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#run ok: 'can get the network status''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#teardown: 'can get the network status''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#teardown ok: 'can get the network status''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#setup: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#setup ok: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:02 - DEBUG UnitTestFramework: '#run: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#run ok: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#teardown: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#teardown ok: 'wifi peer is marked unavailable if announcements stop''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#setup: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#setup ok: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:04 - DEBUG UnitTestFramework: '#run: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:05 - DEBUG UnitTestFramework: '#run ok: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:05 - DEBUG UnitTestFramework: '#teardown: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:06 - DEBUG UnitTestFramework: '#teardown ok: 'native peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:42:06 - DEBUG UnitTestFramework: '#setup: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:06 - DEBUG UnitTestFramework: '#setup ok: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:06 - DEBUG UnitTestFramework: '#run: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:07 - DEBUG UnitTestFramework: '#run ok: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:07 - DEBUG UnitTestFramework: '#teardown: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:08 - DEBUG UnitTestFramework: '#teardown ok: 'peerAvailabilityChanged - peer added/removed to/from cache (native)''
2017-02-09 13:42:08 - DEBUG UnitTestFramework: '#setup: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:08 - DEBUG UnitTestFramework: '#setup ok: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:08 - DEBUG UnitTestFramework: '#run: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:09 - DEBUG UnitTestFramework: '#run ok: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:09 - DEBUG UnitTestFramework: '#teardown: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:10 - DEBUG UnitTestFramework: '#teardown ok: 'peerAvailabilityChanged - peer added/removed to/from cache (wifi)''
2017-02-09 13:42:10 - DEBUG UnitTestFramework: '#setup: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:10 - DEBUG UnitTestFramework: '#setup ok: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:10 - DEBUG UnitTestFramework: '#run: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:11 - DEBUG UnitTestFramework: '#run ok: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:11 - DEBUG UnitTestFramework: '#teardown: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:13 - DEBUG UnitTestFramework: '#teardown ok: 'peerAvailabilityChanged - peer with the same id, conn type, host, port and generation is ignored''
2017-02-09 13:42:13 - DEBUG UnitTestFramework: '#setup: 'native available - new peer is cached''
2017-02-09 13:42:13 - DEBUG UnitTestFramework: '#setup ok: 'native available - new peer is cached''
2017-02-09 13:42:13 - DEBUG UnitTestFramework: '#run: 'native available - new peer is cached''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#run ok: 'native available - new peer is cached''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#teardown: 'native available - new peer is cached''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#teardown ok: 'native available - new peer is cached''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#setup: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#setup ok: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:14 - DEBUG UnitTestFramework: '#run: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - INFO Socket: 'run skipped, test: 'native available - peer with same port and different generation is cached (BLUETOOTH)', event: 'run_native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - INFO Socket: 'run skipped, test: 'native available - peer with same port and different generation is cached (BLUETOOTH)', event: 'run_native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - INFO Socket: 'run skipped, test: 'native available - peer with same port and different generation is cached (BLUETOOTH)', event: 'run_native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#run ok: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#teardown: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#teardown ok: 'native available - peer with same port and different generation is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#setup: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#setup ok: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:15 - DEBUG UnitTestFramework: '#run: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:15 - INFO Socket: 'run skipped, test: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)', event: 'run_native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - INFO Socket: 'run skipped, test: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)', event: 'run_native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - INFO Socket: 'run skipped, test: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)', event: 'run_native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#run ok: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#teardown: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#teardown ok: 'native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#setup: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#setup ok: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:16 - DEBUG UnitTestFramework: '#run: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:17 - DEBUG UnitTestFramework: '#run ok: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:17 - DEBUG UnitTestFramework: '#teardown: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:19 - DEBUG UnitTestFramework: '#teardown ok: 'native available - peer with greater generation is cached (MPCF)''
2017-02-09 13:42:19 - DEBUG UnitTestFramework: '#setup: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:19 - DEBUG UnitTestFramework: '#setup ok: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:19 - DEBUG UnitTestFramework: '#run: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:20 - DEBUG UnitTestFramework: '#run ok: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:20 - DEBUG UnitTestFramework: '#teardown: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:21 - DEBUG UnitTestFramework: '#teardown ok: 'native available - peer with same or older generation is ignored (MPCF)''
2017-02-09 13:42:21 - DEBUG UnitTestFramework: '#setup: 'native unavailable - new peer is ignored''
2017-02-09 13:42:21 - DEBUG UnitTestFramework: '#setup ok: 'native unavailable - new peer is ignored''
2017-02-09 13:42:21 - DEBUG UnitTestFramework: '#run: 'native unavailable - new peer is ignored''
2017-02-09 13:42:22 - DEBUG UnitTestFramework: '#run ok: 'native unavailable - new peer is ignored''
2017-02-09 13:42:22 - DEBUG UnitTestFramework: '#teardown: 'native unavailable - new peer is ignored''
2017-02-09 13:42:23 - DEBUG UnitTestFramework: '#teardown ok: 'native unavailable - new peer is ignored''
2017-02-09 13:42:23 - DEBUG UnitTestFramework: '#setup: 'native unavailable - cached peer is removed''
2017-02-09 13:42:23 - DEBUG UnitTestFramework: '#setup ok: 'native unavailable - cached peer is removed''
2017-02-09 13:42:23 - DEBUG UnitTestFramework: '#run: 'native unavailable - cached peer is removed''
2017-02-09 13:42:24 - DEBUG UnitTestFramework: '#run ok: 'native unavailable - cached peer is removed''
2017-02-09 13:42:24 - DEBUG UnitTestFramework: '#teardown: 'native unavailable - cached peer is removed''
2017-02-09 13:42:26 - DEBUG UnitTestFramework: '#teardown ok: 'native unavailable - cached peer is removed''
2017-02-09 13:42:26 - DEBUG UnitTestFramework: '#setup: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:26 - DEBUG UnitTestFramework: '#setup ok: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:26 - DEBUG UnitTestFramework: '#run: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:27 - DEBUG UnitTestFramework: '#run ok: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:27 - DEBUG UnitTestFramework: '#teardown: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:28 - DEBUG UnitTestFramework: '#teardown ok: 'networkChanged - fires peerAvailabilityChanged event for wifi peers''
2017-02-09 13:42:28 - DEBUG UnitTestFramework: '#setup: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:28 - DEBUG UnitTestFramework: '#setup ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:28 - DEBUG UnitTestFramework: '#run: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:28 - INFO Socket: 'run skipped, test: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)', event: 'run_networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - INFO Socket: 'run skipped, test: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)', event: 'run_networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - INFO Socket: 'run skipped, test: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)', event: 'run_networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#run ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#teardown: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#teardown ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#setup: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#setup ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:29 - DEBUG UnitTestFramework: '#run: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:33 - DEBUG UnitTestFramework: '#run ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:33 - DEBUG UnitTestFramework: '#teardown: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:34 - DEBUG UnitTestFramework: '#teardown ok: 'networkChanged - fires peerAvailabilityChanged event for native peers (MPCF)''
2017-02-09 13:42:34 - DEBUG UnitTestFramework: '#setup: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:34 - DEBUG UnitTestFramework: '#setup ok: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:34 - DEBUG UnitTestFramework: '#run: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:34 - INFO Socket: 'run skipped, test: 'multiconnect failure - new peer is ignored (MPCF)', event: 'run_multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - INFO Socket: 'run skipped, test: 'multiconnect failure - new peer is ignored (MPCF)', event: 'run_multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - INFO Socket: 'run skipped, test: 'multiconnect failure - new peer is ignored (MPCF)', event: 'run_multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#run ok: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#teardown: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#teardown ok: 'multiconnect failure - new peer is ignored (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#setup: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#setup ok: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:35 - DEBUG UnitTestFramework: '#run: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - INFO Socket: 'run skipped, test: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)', event: 'run_multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - INFO Socket: 'run skipped, test: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)', event: 'run_multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - INFO Socket: 'run skipped, test: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)', event: 'run_multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#run ok: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#teardown: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#teardown ok: 'multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#setup: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#setup ok: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:36 - DEBUG UnitTestFramework: '#run: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:38 - DEBUG UnitTestFramework: '#run ok: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:38 - DEBUG UnitTestFramework: '#teardown: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:39 - DEBUG UnitTestFramework: '#teardown ok: 'newAddressPort field (TCP_NATIVE)''
2017-02-09 13:42:39 - DEBUG UnitTestFramework: '#setup: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:39 - DEBUG UnitTestFramework: '#setup ok: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:39 - DEBUG UnitTestFramework: '#run: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:39 - INFO Socket: 'run skipped, test: 'newAddressPort field (BLUETOOTH)', event: 'run_newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - INFO Socket: 'run skipped, test: 'newAddressPort field (BLUETOOTH)', event: 'run_newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - INFO Socket: 'run skipped, test: 'newAddressPort field (BLUETOOTH)', event: 'run_newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#run ok: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#teardown: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#teardown ok: 'newAddressPort field (BLUETOOTH)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#setup: 'newAddressPort field (MPCF)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#setup ok: 'newAddressPort field (MPCF)''
2017-02-09 13:42:40 - DEBUG UnitTestFramework: '#run: 'newAddressPort field (MPCF)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#run ok: 'newAddressPort field (MPCF)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#teardown: 'newAddressPort field (MPCF)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#teardown ok: 'newAddressPort field (MPCF)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#setup: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#setup ok: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:41 - DEBUG UnitTestFramework: '#run: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - INFO Socket: 'run skipped, test: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)', event: 'run_newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - INFO Socket: 'run skipped, test: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)', event: 'run_newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - INFO Socket: 'run skipped, test: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)', event: 'run_newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#run ok: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#teardown: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#teardown ok: 'newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#setup: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#setup ok: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:42 - DEBUG UnitTestFramework: '#run: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#run ok: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#teardown: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#teardown ok: '#getPeerHostInfo - error when peer has not been discovered yet''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#setup: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#setup ok: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:44 - DEBUG UnitTestFramework: '#run: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - INFO Socket: 'run skipped, test: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)', event: 'run_#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - INFO Socket: 'run skipped, test: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)', event: 'run_#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - INFO Socket: 'run skipped, test: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)', event: 'run_#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#run ok: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#teardown: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#teardown ok: '#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#setup: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#setup ok: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:45 - DEBUG UnitTestFramework: '#run: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#run ok: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#teardown: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#teardown ok: '#getPeerHostInfo - returns discovered cached native peer and calls `_multiConnect` to retrieve the port (MPCF)''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#setup: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#setup ok: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:46 - DEBUG UnitTestFramework: '#run: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#run ok: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#teardown: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#teardown ok: '#getPeerHostInfo - returns discovered cached wifi peer''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#setup: '#disconnect fails on wifi peers''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#setup ok: '#disconnect fails on wifi peers''
2017-02-09 13:42:47 - DEBUG UnitTestFramework: '#run: '#disconnect fails on wifi peers''
2017-02-09 13:42:48 - DEBUG UnitTestFramework: '#run ok: '#disconnect fails on wifi peers''
2017-02-09 13:42:48 - DEBUG UnitTestFramework: '#teardown: '#disconnect fails on wifi peers''
2017-02-09 13:42:49 - DEBUG UnitTestFramework: '#teardown ok: '#disconnect fails on wifi peers''
2017-02-09 13:42:49 - DEBUG UnitTestFramework: '#setup: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:49 - DEBUG UnitTestFramework: '#setup ok: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:49 - DEBUG UnitTestFramework: '#run: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - INFO Socket: 'run skipped, test: '#disconnect delegates native peers to the native wrapper', event: 'run_#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - INFO Socket: 'run skipped, test: '#disconnect delegates native peers to the native wrapper', event: 'run_#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - INFO Socket: 'run skipped, test: '#disconnect delegates native peers to the native wrapper', event: 'run_#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#run ok: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#teardown: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#teardown ok: '#disconnect delegates native peers to the native wrapper''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#setup: 'network changes emitted correctly''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#setup ok: 'network changes emitted correctly''
2017-02-09 13:42:50 - DEBUG UnitTestFramework: '#run: 'network changes emitted correctly''
2017-02-09 13:42:50 - INFO Socket: 'run skipped, test: 'network changes emitted correctly', event: 'run_network changes emitted correctly''
2017-02-09 13:42:50 - INFO Socket: 'run skipped, test: 'network changes emitted correctly', event: 'run_network changes emitted correctly''
2017-02-09 13:42:51 - INFO Socket: 'run skipped, test: 'network changes emitted correctly', event: 'run_network changes emitted correctly''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#run ok: 'network changes emitted correctly''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#teardown: 'network changes emitted correctly''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#teardown ok: 'network changes emitted correctly''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#setup: 'network changes not emitted in started state''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#setup ok: 'network changes not emitted in started state''
2017-02-09 13:42:51 - DEBUG UnitTestFramework: '#run: 'network changes not emitted in started state''
2017-02-09 13:42:52 - INFO Socket: 'run skipped, test: 'network changes not emitted in started state', event: 'run_network changes not emitted in started state''
2017-02-09 13:42:52 - INFO Socket: 'run skipped, test: 'network changes not emitted in started state', event: 'run_network changes not emitted in started state''
2017-02-09 13:42:52 - INFO Socket: 'run skipped, test: 'network changes not emitted in started state', event: 'run_network changes not emitted in started state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#run ok: 'network changes not emitted in started state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#teardown: 'network changes not emitted in started state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#teardown ok: 'network changes not emitted in started state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#setup: 'network changes not emitted in stopped state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#setup ok: 'network changes not emitted in stopped state''
2017-02-09 13:42:52 - DEBUG UnitTestFramework: '#run: 'network changes not emitted in stopped state''
2017-02-09 13:42:53 - INFO Socket: 'run skipped, test: 'network changes not emitted in stopped state', event: 'run_network changes not emitted in stopped state''
2017-02-09 13:42:53 - INFO Socket: 'run skipped, test: 'network changes not emitted in stopped state', event: 'run_network changes not emitted in stopped state''
2017-02-09 13:42:53 - INFO Socket: 'run skipped, test: 'network changes not emitted in stopped state', event: 'run_network changes not emitted in stopped state''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#run ok: 'network changes not emitted in stopped state''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#teardown: 'network changes not emitted in stopped state''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#teardown ok: 'network changes not emitted in stopped state''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#setup: 'calls correct starts when network changes''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#setup ok: 'calls correct starts when network changes''
2017-02-09 13:42:53 - DEBUG UnitTestFramework: '#run: 'calls correct starts when network changes''
2017-02-09 13:42:54 - INFO Socket: 'run skipped, test: 'calls correct starts when network changes', event: 'run_calls correct starts when network changes''
2017-02-09 13:42:55 - INFO Socket: 'run skipped, test: 'calls correct starts when network changes', event: 'run_calls correct starts when network changes''
2017-02-09 13:42:55 - INFO Socket: 'run skipped, test: 'calls correct starts when network changes', event: 'run_calls correct starts when network changes''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#run ok: 'calls correct starts when network changes''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#teardown: 'calls correct starts when network changes''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#teardown ok: 'calls correct starts when network changes''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#setup: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#setup ok: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:55 - DEBUG UnitTestFramework: '#run: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on Android', event: 'run_We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on Android', event: 'run_We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on Android', event: 'run_We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#run ok: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#teardown: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#teardown ok: 'We properly fire peer unavailable and then available when connection fails on Android''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#setup: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#setup ok: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:56 - DEBUG UnitTestFramework: '#run: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:56 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on iOS', event: 'run_We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on iOS', event: 'run_We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - INFO Socket: 'run skipped, test: 'We properly fire peer unavailable and then available when connection fails on iOS', event: 'run_We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#run ok: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#teardown: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#teardown ok: 'We properly fire peer unavailable and then available when connection fails on iOS''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#setup: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#setup ok: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:57 - DEBUG UnitTestFramework: '#run: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:57 - INFO Socket: 'run skipped, test: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen', event: 'run_If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - INFO Socket: 'run skipped, test: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen', event: 'run_If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - INFO Socket: 'run skipped, test: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen', event: 'run_If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#run ok: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#teardown: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#teardown ok: 'If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#setup: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#setup ok: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:42:58 - DEBUG UnitTestFramework: '#run: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:42:58 - INFO Socket: 'run skipped, test: 'does not fire duplicate events after peer listener recreation', event: 'run_does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - INFO Socket: 'run skipped, test: 'does not fire duplicate events after peer listener recreation', event: 'run_does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - INFO Socket: 'run skipped, test: 'does not fire duplicate events after peer listener recreation', event: 'run_does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#run ok: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#teardown: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#teardown ok: 'does not fire duplicate events after peer listener recreation''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#setup: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#setup ok: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:00 - DEBUG UnitTestFramework: '#run: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#run ok: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#teardown: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#teardown ok: 'peer should be found once after listening and discovery started''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#setup: 'can get data from all participants''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#setup ok: 'can get data from all participants''
2017-02-09 13:43:04 - DEBUG UnitTestFramework: '#run: 'can get data from all participants''
2017-02-09 13:43:04 - INFO Socket: 'run skipped, test: 'can get data from all participants', event: 'run_can get data from all participants''
2017-02-09 13:43:05 - INFO Socket: 'run skipped, test: 'can get data from all participants', event: 'run_can get data from all participants''
2017-02-09 13:43:05 - INFO Socket: 'run skipped, test: 'can get data from all participants', event: 'run_can get data from all participants''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#run ok: 'can get data from all participants''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#teardown: 'can get data from all participants''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#teardown ok: 'can get data from all participants''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#setup: 'test for data corruption''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#setup ok: 'test for data corruption''
2017-02-09 13:43:05 - DEBUG UnitTestFramework: '#run: 'test for data corruption''
2017-02-09 13:43:06 - INFO Socket: 'run skipped, test: 'test for data corruption', event: 'run_test for data corruption''
2017-02-09 13:43:06 - INFO Socket: 'run skipped, test: 'test for data corruption', event: 'run_test for data corruption''
2017-02-09 13:43:06 - INFO Socket: 'run skipped, test: 'test for data corruption', event: 'run_test for data corruption''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#run ok: 'test for data corruption''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#teardown: 'test for data corruption''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#teardown ok: 'test for data corruption''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#setup: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#setup ok: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:06 - DEBUG UnitTestFramework: '#run: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#run ok: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#teardown: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#teardown ok: 'Discovered peer should be removed if no availability updates were received during availability timeout''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - test getters''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - test getters''
2017-02-09 13:43:08 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - test getters''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - test getters''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - test getters''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - test getters''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:09 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - start and kill''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - double start''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - double start''
2017-02-09 13:43:10 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - double start''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - double start''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - double start''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - double start''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:12 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - start after kill''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:13 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - make sure ids are unique''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#setup: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#setup ok: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:14 - DEBUG UnitTestFramework: '#run: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#run ok: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#teardown: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#teardown ok: '#testThaliPeerAction - check that forever agent can be destroyed''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#setup: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#setup ok: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:15 - DEBUG UnitTestFramework: '#run: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#run ok: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#teardown: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#teardown ok: 'Test PeerDictionary basic functionality''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#setup: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#setup ok: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:17 - DEBUG UnitTestFramework: '#run: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:18 - DEBUG UnitTestFramework: '#run ok: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:18 - DEBUG UnitTestFramework: '#teardown: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:18 - DEBUG UnitTestFramework: '#teardown ok: 'Test PeerDictionary with multiple entries.''
2017-02-09 13:43:18 - DEBUG UnitTestFramework: '#setup: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:19 - DEBUG UnitTestFramework: '#setup ok: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:19 - DEBUG UnitTestFramework: '#run: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#run ok: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#teardown: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#teardown ok: 'RESOLVED entries are removed before WAITING state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#setup: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#setup ok: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:20 - DEBUG UnitTestFramework: '#run: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#run ok: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#teardown: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#teardown ok: 'WAITING entries are removed before CONTROLLED_BY_POOL state entry.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#setup: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#setup ok: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:21 - DEBUG UnitTestFramework: '#run: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#run ok: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#teardown: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#teardown ok: 'When CONTROLLED_BY_POOL entry is removed and kill is called.''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:23 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolDefault - single action''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:24 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolDefault - multiple actions''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:25 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:27 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:27 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:28 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolDefault - PSK Pool works''
2017-02-09 13:43:28 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:28 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:28 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolDefault - stop''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:29 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - make sure that start verifies queue length''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:30 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - bad enqueues''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:31 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - do not allow same object type''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:33 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - make sure we catch kill and dequeue''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:34 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - make sure our changes to the action leave kill as idempotent''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#setup: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#setup ok: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:35 - DEBUG UnitTestFramework: '#run: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:36 - DEBUG UnitTestFramework: '#run ok: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:36 - DEBUG UnitTestFramework: '#teardown: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:36 - DEBUG UnitTestFramework: '#teardown ok: '#ThaliPeerPoolInterface - make sure that stop removes all actions''
2017-02-09 13:43:36 - DEBUG UnitTestFramework: '#setup: 'We reject unrecognized connection type''
2017-02-09 13:43:37 - DEBUG UnitTestFramework: '#setup ok: 'We reject unrecognized connection type''
2017-02-09 13:43:37 - DEBUG UnitTestFramework: '#run: 'We reject unrecognized connection type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#run ok: 'We reject unrecognized connection type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#teardown: 'We reject unrecognized connection type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#teardown ok: 'We reject unrecognized connection type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#setup: 'We reject unrecognized action type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#setup ok: 'We reject unrecognized action type''
2017-02-09 13:43:38 - DEBUG UnitTestFramework: '#run: 'We reject unrecognized action type''
2017-02-09 13:43:39 - INFO Socket: 'run skipped, test: 'We reject unrecognized action type', event: 'run_We reject unrecognized action type''
2017-02-09 13:43:39 - INFO Socket: 'run skipped, test: 'We reject unrecognized action type', event: 'run_We reject unrecognized action type''
2017-02-09 13:43:39 - INFO Socket: 'run skipped, test: 'We reject unrecognized action type', event: 'run_We reject unrecognized action type''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#run ok: 'We reject unrecognized action type''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#teardown: 'We reject unrecognized action type''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#teardown ok: 'We reject unrecognized action type''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#setup: 'One action on bluetooth''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#setup ok: 'One action on bluetooth''
2017-02-09 13:43:39 - DEBUG UnitTestFramework: '#run: 'One action on bluetooth''
2017-02-09 13:43:39 - INFO Socket: 'run skipped, test: 'One action on bluetooth', event: 'run_One action on bluetooth''
2017-02-09 13:43:40 - INFO Socket: 'run skipped, test: 'One action on bluetooth', event: 'run_One action on bluetooth''
2017-02-09 13:43:40 - INFO Socket: 'run skipped, test: 'One action on bluetooth', event: 'run_One action on bluetooth''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#run ok: 'One action on bluetooth''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#teardown: 'One action on bluetooth''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#teardown ok: 'One action on bluetooth''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#setup: 'Two notification actions''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#setup ok: 'Two notification actions''
2017-02-09 13:43:40 - DEBUG UnitTestFramework: '#run: 'Two notification actions''
2017-02-09 13:43:41 - INFO Socket: 'run skipped, test: 'Two notification actions', event: 'run_Two notification actions''
2017-02-09 13:43:41 - INFO Socket: 'run skipped, test: 'Two notification actions', event: 'run_Two notification actions''
2017-02-09 13:43:41 - INFO Socket: 'run skipped, test: 'Two notification actions', event: 'run_Two notification actions''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#run ok: 'Two notification actions''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#teardown: 'Two notification actions''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#teardown ok: 'Two notification actions''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#setup: 'replicateThroughProblems''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#setup ok: 'replicateThroughProblems''
2017-02-09 13:43:41 - DEBUG UnitTestFramework: '#run: 'replicateThroughProblems''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#run ok: 'replicateThroughProblems''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#teardown: 'replicateThroughProblems''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#teardown ok: 'replicateThroughProblems''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#setup: 'Replication goes first''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#setup ok: 'Replication goes first''
2017-02-09 13:43:43 - DEBUG UnitTestFramework: '#run: 'Replication goes first''
2017-02-09 13:43:43 - INFO Socket: 'run skipped, test: 'Replication goes first', event: 'run_Replication goes first''
2017-02-09 13:43:44 - INFO Socket: 'run skipped, test: 'Replication goes first', event: 'run_Replication goes first''
2017-02-09 13:43:44 - INFO Socket: 'run skipped, test: 'Replication goes first', event: 'run_Replication goes first''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#run ok: 'Replication goes first''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#teardown: 'Replication goes first''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#teardown ok: 'Replication goes first''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#setup: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#setup ok: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:44 - DEBUG UnitTestFramework: '#run: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#run ok: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#teardown: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#teardown ok: 'wifi allows many parallel non-replication actions''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#setup: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#setup ok: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:45 - DEBUG UnitTestFramework: '#run: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#run ok: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#teardown: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#teardown ok: 'wifi allows no more than 2 simultaneous replication actions for same peerID''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#setup: 'Client to server request coordinated''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#setup ok: 'Client to server request coordinated''
2017-02-09 13:43:46 - DEBUG UnitTestFramework: '#run: 'Client to server request coordinated''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#run ok: 'Client to server request coordinated''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#teardown: 'Client to server request coordinated''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#teardown ok: 'Client to server request coordinated''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#setup: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#setup ok: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:53 - DEBUG UnitTestFramework: '#run: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:54 - DEBUG UnitTestFramework: '#run ok: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:54 - DEBUG UnitTestFramework: '#teardown: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:55 - DEBUG UnitTestFramework: '#teardown ok: 'Test BEACONS_RETRIEVED_AND_PARSED locally''
2017-02-09 13:43:55 - DEBUG UnitTestFramework: '#setup: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:55 - DEBUG UnitTestFramework: '#setup ok: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:55 - DEBUG UnitTestFramework: '#run: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:56 - DEBUG UnitTestFramework: '#run ok: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:56 - DEBUG UnitTestFramework: '#teardown: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:58 - DEBUG UnitTestFramework: '#teardown ok: 'Test HTTP_BAD_RESPONSE locally''
2017-02-09 13:43:58 - DEBUG UnitTestFramework: '#setup: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:43:58 - DEBUG UnitTestFramework: '#setup ok: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:43:58 - DEBUG UnitTestFramework: '#run: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:43:59 - DEBUG UnitTestFramework: '#run ok: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:43:59 - DEBUG UnitTestFramework: '#teardown: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:44:00 - DEBUG UnitTestFramework: '#teardown ok: 'Test NETWORK_PROBLEM locally''
2017-02-09 13:44:00 - DEBUG UnitTestFramework: '#setup: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:00 - DEBUG UnitTestFramework: '#setup ok: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:00 - DEBUG UnitTestFramework: '#run: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:01 - DEBUG UnitTestFramework: '#run ok: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:01 - DEBUG UnitTestFramework: '#teardown: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:02 - DEBUG UnitTestFramework: '#teardown ok: 'Action fails when getPeerHostInfo fails''
2017-02-09 13:44:02 - DEBUG UnitTestFramework: '#setup: 'Call the start two times''
2017-02-09 13:44:02 - DEBUG UnitTestFramework: '#setup ok: 'Call the start two times''
2017-02-09 13:44:02 - DEBUG UnitTestFramework: '#run: 'Call the start two times''
2017-02-09 13:44:04 - DEBUG UnitTestFramework: '#run ok: 'Call the start two times''
2017-02-09 13:44:04 - DEBUG UnitTestFramework: '#teardown: 'Call the start two times''
2017-02-09 13:44:05 - DEBUG UnitTestFramework: '#teardown ok: 'Call the start two times''
2017-02-09 13:44:05 - DEBUG UnitTestFramework: '#setup: 'Call the kill before calling the start''
2017-02-09 13:44:05 - DEBUG UnitTestFramework: '#setup ok: 'Call the kill before calling the start''
2017-02-09 13:44:05 - DEBUG UnitTestFramework: '#run: 'Call the kill before calling the start''
2017-02-09 13:44:06 - DEBUG UnitTestFramework: '#run ok: 'Call the kill before calling the start''
2017-02-09 13:44:06 - DEBUG UnitTestFramework: '#teardown: 'Call the kill before calling the start''
2017-02-09 13:44:07 - DEBUG UnitTestFramework: '#teardown ok: 'Call the kill before calling the start''
2017-02-09 13:44:07 - DEBUG UnitTestFramework: '#setup: 'Call the kill immediately after the start''
2017-02-09 13:44:07 - DEBUG UnitTestFramework: '#setup ok: 'Call the kill immediately after the start''
2017-02-09 13:44:07 - DEBUG UnitTestFramework: '#run: 'Call the kill immediately after the start''
2017-02-09 13:44:08 - DEBUG UnitTestFramework: '#run ok: 'Call the kill immediately after the start''
2017-02-09 13:44:08 - DEBUG UnitTestFramework: '#teardown: 'Call the kill immediately after the start''
2017-02-09 13:44:09 - DEBUG UnitTestFramework: '#teardown ok: 'Call the kill immediately after the start''
2017-02-09 13:44:09 - DEBUG UnitTestFramework: '#setup: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:10 - DEBUG UnitTestFramework: '#setup ok: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:10 - DEBUG UnitTestFramework: '#run: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:13 - DEBUG UnitTestFramework: '#run ok: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:13 - DEBUG UnitTestFramework: '#teardown: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:14 - DEBUG UnitTestFramework: '#teardown ok: 'Call the kill while waiting a response from the server''
2017-02-09 13:44:14 - DEBUG UnitTestFramework: '#setup: 'Test to exceed the max content size locally''
2017-02-09 13:44:15 - DEBUG UnitTestFramework: '#setup ok: 'Test to exceed the max content size locally''
2017-02-09 13:44:15 - DEBUG UnitTestFramework: '#run: 'Test to exceed the max content size locally''
2017-02-09 13:44:16 - DEBUG UnitTestFramework: '#run ok: 'Test to exceed the max content size locally''
2017-02-09 13:44:16 - DEBUG UnitTestFramework: '#teardown: 'Test to exceed the max content size locally''
2017-02-09 13:44:17 - DEBUG UnitTestFramework: '#teardown ok: 'Test to exceed the max content size locally''
2017-02-09 13:44:17 - DEBUG UnitTestFramework: '#setup: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:17 - DEBUG UnitTestFramework: '#setup ok: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:17 - DEBUG UnitTestFramework: '#run: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#run ok: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#teardown: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#teardown ok: 'Close the server socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#setup: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#setup ok: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:21 - DEBUG UnitTestFramework: '#run: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:24 - DEBUG UnitTestFramework: '#run ok: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:24 - DEBUG UnitTestFramework: '#teardown: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:25 - DEBUG UnitTestFramework: '#teardown ok: 'Close the client socket while the client is waiting a response from the server. Local test.''
2017-02-09 13:44:25 - DEBUG UnitTestFramework: '#setup: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:25 - DEBUG UnitTestFramework: '#setup ok: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:25 - DEBUG UnitTestFramework: '#run: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#run ok: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#teardown: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#teardown ok: '#generatePreambleAndBeacons bad args''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#setup: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#setup ok: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:26 - DEBUG UnitTestFramework: '#run: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#run ok: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#teardown: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#teardown ok: '#generatePreambleAndBeacons empty keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#setup: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#setup ok: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:28 - DEBUG UnitTestFramework: '#run: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#run ok: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#teardown: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#teardown ok: '#generatePreambleAndBeacons multiple keys to notify''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#setup: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:29 - DEBUG UnitTestFramework: '#run: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons invalid ECDH public key in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#setup: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:30 - DEBUG UnitTestFramework: '#run: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons invalid expiration in beaconStreamWithPreAmble''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#setup: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:31 - DEBUG UnitTestFramework: '#run: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:32 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:32 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:32 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:32 - DEBUG UnitTestFramework: '#setup: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:33 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:33 - DEBUG UnitTestFramework: '#run: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons expiration out of range lower''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#setup: '#parseBeacons no beacons returns null''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons no beacons returns null''
2017-02-09 13:44:34 - DEBUG UnitTestFramework: '#run: '#parseBeacons no beacons returns null''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons no beacons returns null''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons no beacons returns null''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons no beacons returns null''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#setup: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:35 - DEBUG UnitTestFramework: '#run: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons invalid size for encryptedBeaconKeyId in  beaconStreamWithPreAmble''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#setup: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:36 - DEBUG UnitTestFramework: '#run: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:37 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:37 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:38 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons addressBookCallback fails decrypt''
2017-02-09 13:44:38 - DEBUG UnitTestFramework: '#setup: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:38 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:38 - DEBUG UnitTestFramework: '#run: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons addressBookCallback returns no matches''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#setup: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:39 - DEBUG UnitTestFramework: '#run: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons addressBookCallback returns spurious match''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#setup: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#setup ok: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:40 - DEBUG UnitTestFramework: '#run: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#run ok: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#teardown: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#teardown ok: '#parseBeacons addressBookCallback returns public key''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#setup: 'validate generatePskIdentityField''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#setup ok: 'validate generatePskIdentityField''
2017-02-09 13:44:41 - DEBUG UnitTestFramework: '#run: 'validate generatePskIdentityField''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#run ok: 'validate generatePskIdentityField''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#teardown: 'validate generatePskIdentityField''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#teardown ok: 'validate generatePskIdentityField''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#setup: 'validate generatePskSecret''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#setup ok: 'validate generatePskSecret''
2017-02-09 13:44:43 - DEBUG UnitTestFramework: '#run: 'validate generatePskSecret''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#run ok: 'validate generatePskSecret''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#teardown: 'validate generatePskSecret''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#teardown ok: 'validate generatePskSecret''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#setup: 'validate generatePskSecrets''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#setup ok: 'validate generatePskSecrets''
2017-02-09 13:44:44 - DEBUG UnitTestFramework: '#run: 'validate generatePskSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#run ok: 'validate generatePskSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#teardown: 'validate generatePskSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#teardown ok: 'validate generatePskSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#setup: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#setup ok: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:45 - DEBUG UnitTestFramework: '#run: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:46 - DEBUG UnitTestFramework: '#run ok: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:46 - DEBUG UnitTestFramework: '#teardown: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:47 - DEBUG UnitTestFramework: '#teardown ok: 'validate generateBeaconStreamAndSecrets''
2017-02-09 13:44:47 - DEBUG UnitTestFramework: '#setup: 'Add two Peers.''
2017-02-09 13:44:47 - DEBUG UnitTestFramework: '#setup ok: 'Add two Peers.''
2017-02-09 13:44:47 - DEBUG UnitTestFramework: '#run: 'Add two Peers.''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#run ok: 'Add two Peers.''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#teardown: 'Add two Peers.''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#teardown ok: 'Add two Peers.''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#setup: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#setup ok: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:48 - DEBUG UnitTestFramework: '#run: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#run ok: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#teardown: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#teardown ok: 'TCP_NATIVE peer loses DNS''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#setup: 'Received beacons with no values for us''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#setup ok: 'Received beacons with no values for us''
2017-02-09 13:44:49 - DEBUG UnitTestFramework: '#run: 'Received beacons with no values for us''
2017-02-09 13:44:51 - DEBUG UnitTestFramework: '#run ok: 'Received beacons with no values for us''
2017-02-09 13:44:51 - DEBUG UnitTestFramework: '#teardown: 'Received beacons with no values for us''
2017-02-09 13:44:52 - DEBUG UnitTestFramework: '#teardown ok: 'Received beacons with no values for us''
2017-02-09 13:44:52 - DEBUG UnitTestFramework: '#setup: 'Notification action killed with a superseded''
2017-02-09 13:44:52 - DEBUG UnitTestFramework: '#setup ok: 'Notification action killed with a superseded''
2017-02-09 13:44:52 - DEBUG UnitTestFramework: '#run: 'Notification action killed with a superseded''
2017-02-09 13:44:53 - DEBUG UnitTestFramework: '#run ok: 'Notification action killed with a superseded''
2017-02-09 13:44:53 - DEBUG UnitTestFramework: '#teardown: 'Notification action killed with a superseded''
2017-02-09 13:44:54 - DEBUG UnitTestFramework: '#teardown ok: 'Notification action killed with a superseded''
2017-02-09 13:44:54 - DEBUG UnitTestFramework: '#setup: 'Resolves an action locally''
2017-02-09 13:44:54 - DEBUG UnitTestFramework: '#setup ok: 'Resolves an action locally''
2017-02-09 13:44:54 - DEBUG UnitTestFramework: '#run: 'Resolves an action locally''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#run ok: 'Resolves an action locally''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#teardown: 'Resolves an action locally''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#teardown ok: 'Resolves an action locally''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#setup: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#setup ok: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:56 - DEBUG UnitTestFramework: '#run: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#run ok: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#teardown: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#teardown ok: 'Resolves an action locally using ThaliPeerPoolDefault''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#setup: 'Action fails because of a bad hostname.''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#setup ok: 'Action fails because of a bad hostname.''
2017-02-09 13:44:57 - DEBUG UnitTestFramework: '#run: 'Action fails because of a bad hostname.''
2017-02-09 13:45:00 - DEBUG UnitTestFramework: '#run ok: 'Action fails because of a bad hostname.''
2017-02-09 13:45:00 - DEBUG UnitTestFramework: '#teardown: 'Action fails because of a bad hostname.''
2017-02-09 13:45:01 - DEBUG UnitTestFramework: '#teardown ok: 'Action fails because of a bad hostname.''
2017-02-09 13:45:01 - DEBUG UnitTestFramework: '#setup: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:01 - DEBUG UnitTestFramework: '#setup ok: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:01 - DEBUG UnitTestFramework: '#run: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#run ok: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#teardown: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#teardown ok: 'hostaddress is removed when the action is running. ''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#setup: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#setup ok: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:04 - DEBUG UnitTestFramework: '#run: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:06 - DEBUG UnitTestFramework: '#run ok: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:06 - DEBUG UnitTestFramework: '#teardown: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:07 - DEBUG UnitTestFramework: '#teardown ok: 'notificationClient does not retry action with BAD_PEER resolution''
2017-02-09 13:45:07 - DEBUG UnitTestFramework: '#setup: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:07 - DEBUG UnitTestFramework: '#setup ok: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:07 - DEBUG UnitTestFramework: '#run: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#run ok: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#teardown: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#teardown ok: 'notification client correctly handles peer availability changes of the same peer''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#setup: 'Client to server request locally''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#setup ok: 'Client to server request locally''
2017-02-09 13:45:08 - DEBUG UnitTestFramework: '#run: 'Client to server request locally''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#run ok: 'Client to server request locally''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#teardown: 'Client to server request locally''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#teardown ok: 'Client to server request locally''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#setup: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#setup ok: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:10 - DEBUG UnitTestFramework: '#run: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#run ok: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#teardown: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#teardown ok: 'Test ThaliPskMapCache clean and expiration''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#setup: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#setup ok: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:12 - DEBUG UnitTestFramework: '#run: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#run ok: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#teardown: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#teardown ok: 'Test ThaliPskMapCache getSecret and getPublic''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#setup: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#setup ok: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:14 - DEBUG UnitTestFramework: '#run: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#run ok: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#teardown: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#teardown ok: 'Test ThaliPskMapCache multiple entries''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#setup: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#setup ok: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:18 - DEBUG UnitTestFramework: '#run: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#run ok: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#teardown: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#teardown ok: 'Start and stop ThaliNotificationServer''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#setup: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#setup ok: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:19 - DEBUG UnitTestFramework: '#run: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:20 - DEBUG UnitTestFramework: '#run ok: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:20 - DEBUG UnitTestFramework: '#teardown: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:21 - DEBUG UnitTestFramework: '#teardown ok: 'Pass an empty array to ThaliNotificationServer.start''
2017-02-09 13:45:21 - DEBUG UnitTestFramework: '#setup: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:21 - DEBUG UnitTestFramework: '#setup ok: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:21 - DEBUG UnitTestFramework: '#run: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#run ok: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#teardown: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#teardown ok: 'Pass a string to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#setup: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#setup ok: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:22 - DEBUG UnitTestFramework: '#run: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#run ok: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#teardown: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#teardown ok: 'Pass an empty parameter to ThaliNotificationServer.start''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#setup: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#setup ok: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:23 - DEBUG UnitTestFramework: '#run: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#run ok: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#teardown: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#teardown ok: 'Make an HTTP request to /NotificationBeacons''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#setup: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#setup ok: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:25 - DEBUG UnitTestFramework: '#run: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#run ok: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#teardown: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#teardown ok: 'Make an HTTP request to /NotificationBeacons (no keys)''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#setup: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#setup ok: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:26 - DEBUG UnitTestFramework: '#run: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#run ok: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#teardown: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#teardown ok: 'Make an HTTP request to /NotificationBeaconsbefore calling start''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#setup: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#setup ok: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:27 - DEBUG UnitTestFramework: '#run: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#run ok: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#teardown: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure peerDictionaryKey is reasonable''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#setup: 'Make sure start works''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#setup ok: 'Make sure start works''
2017-02-09 13:45:29 - DEBUG UnitTestFramework: '#run: 'Make sure start works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#run ok: 'Make sure start works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#teardown: 'Make sure start works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure start works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#setup: 'Make sure stop works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#setup ok: 'Make sure stop works''
2017-02-09 13:45:30 - DEBUG UnitTestFramework: '#run: 'Make sure stop works''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#run ok: 'Make sure stop works''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#teardown: 'Make sure stop works''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure stop works''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#setup: 'Simple peer event''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#setup ok: 'Simple peer event''
2017-02-09 13:45:31 - DEBUG UnitTestFramework: '#run: 'Simple peer event''
2017-02-09 13:45:32 - DEBUG UnitTestFramework: '#run ok: 'Simple peer event''
2017-02-09 13:45:32 - DEBUG UnitTestFramework: '#teardown: 'Simple peer event''
2017-02-09 13:45:33 - DEBUG UnitTestFramework: '#teardown ok: 'Simple peer event''
2017-02-09 13:45:33 - DEBUG UnitTestFramework: '#setup: 'Coordinated pull replication from notification test''
2017-02-09 13:45:34 - DEBUG UnitTestFramework: '#setup ok: 'Coordinated pull replication from notification test''
2017-02-09 13:45:34 - DEBUG UnitTestFramework: '#run: 'Coordinated pull replication from notification test''
2017-02-09 13:45:37 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:37 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:38 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:38 - DEBUG UnitTestFramework: '#sync ok'
2017-02-09 13:45:38 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:39 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:39 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:45:39 - DEBUG UnitTestFramework: '#sync ok'
2017-02-09 13:45:39 - DEBUG UnitTestFramework: '#run ok: 'Coordinated pull replication from notification test''
2017-02-09 13:45:39 - DEBUG UnitTestFramework: '#teardown: 'Coordinated pull replication from notification test''
2017-02-09 13:45:40 - DEBUG UnitTestFramework: '#teardown ok: 'Coordinated pull replication from notification test''
2017-02-09 13:45:40 - DEBUG UnitTestFramework: '#setup: 'Server is not there''
2017-02-09 13:45:40 - DEBUG UnitTestFramework: '#setup ok: 'Server is not there''
2017-02-09 13:45:40 - DEBUG UnitTestFramework: '#run: 'Server is not there''
2017-02-09 13:45:41 - DEBUG UnitTestFramework: '#run ok: 'Server is not there''
2017-02-09 13:45:41 - DEBUG UnitTestFramework: '#teardown: 'Server is not there''
2017-02-09 13:45:42 - DEBUG UnitTestFramework: '#teardown ok: 'Server is not there''
2017-02-09 13:45:42 - DEBUG UnitTestFramework: '#setup: 'Server accepts & closes connection''
2017-02-09 13:45:43 - DEBUG UnitTestFramework: '#setup ok: 'Server accepts & closes connection''
2017-02-09 13:45:43 - DEBUG UnitTestFramework: '#run: 'Server accepts & closes connection''
2017-02-09 13:45:45 - DEBUG UnitTestFramework: '#run ok: 'Server accepts & closes connection''
2017-02-09 13:45:45 - DEBUG UnitTestFramework: '#teardown: 'Server accepts & closes connection''
2017-02-09 13:45:45 - DEBUG UnitTestFramework: '#teardown ok: 'Server accepts & closes connection''
2017-02-09 13:45:45 - DEBUG UnitTestFramework: '#setup: 'Server always returns 500''
2017-02-09 13:45:46 - DEBUG UnitTestFramework: '#setup ok: 'Server always returns 500''
2017-02-09 13:45:46 - DEBUG UnitTestFramework: '#run: 'Server always returns 500''
2017-02-09 13:45:47 - DEBUG UnitTestFramework: '#run ok: 'Server always returns 500''
2017-02-09 13:45:47 - DEBUG UnitTestFramework: '#teardown: 'Server always returns 500''
2017-02-09 13:45:47 - DEBUG UnitTestFramework: '#teardown ok: 'Server always returns 500''
2017-02-09 13:45:47 - DEBUG UnitTestFramework: '#setup: 'Server always returns 401''
2017-02-09 13:45:49 - DEBUG UnitTestFramework: '#setup ok: 'Server always returns 401''
2017-02-09 13:45:49 - DEBUG UnitTestFramework: '#run: 'Server always returns 401''
2017-02-09 13:45:50 - DEBUG UnitTestFramework: '#run ok: 'Server always returns 401''
2017-02-09 13:45:50 - DEBUG UnitTestFramework: '#teardown: 'Server always returns 401''
2017-02-09 13:45:50 - DEBUG UnitTestFramework: '#teardown ok: 'Server always returns 401''
2017-02-09 13:45:50 - DEBUG UnitTestFramework: '#setup: 'Server always returns 403''
2017-02-09 13:45:51 - DEBUG UnitTestFramework: '#setup ok: 'Server always returns 403''
2017-02-09 13:45:51 - DEBUG UnitTestFramework: '#run: 'Server always returns 403''
2017-02-09 13:45:53 - DEBUG UnitTestFramework: '#run ok: 'Server always returns 403''
2017-02-09 13:45:53 - DEBUG UnitTestFramework: '#teardown: 'Server always returns 403''
2017-02-09 13:45:53 - DEBUG UnitTestFramework: '#teardown ok: 'Server always returns 403''
2017-02-09 13:45:53 - DEBUG UnitTestFramework: '#setup: 'Make sure docs replicate''
2017-02-09 13:45:54 - DEBUG UnitTestFramework: '#setup ok: 'Make sure docs replicate''
2017-02-09 13:45:54 - DEBUG UnitTestFramework: '#run: 'Make sure docs replicate''
2017-02-09 13:45:54 - INFO Socket: 'run skipped, test: 'Make sure docs replicate', event: 'run_Make sure docs replicate''
2017-02-09 13:45:55 - INFO Socket: 'run skipped, test: 'Make sure docs replicate', event: 'run_Make sure docs replicate''
2017-02-09 13:45:55 - INFO Socket: 'run skipped, test: 'Make sure docs replicate', event: 'run_Make sure docs replicate''
2017-02-09 13:45:55 - DEBUG UnitTestFramework: '#run ok: 'Make sure docs replicate''
2017-02-09 13:45:55 - DEBUG UnitTestFramework: '#teardown: 'Make sure docs replicate''
2017-02-09 13:45:55 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure docs replicate''
2017-02-09 13:45:55 - DEBUG UnitTestFramework: '#setup: 'Do nothing and make sure we time out''
2017-02-09 13:45:56 - DEBUG UnitTestFramework: '#setup ok: 'Do nothing and make sure we time out''
2017-02-09 13:45:56 - DEBUG UnitTestFramework: '#run: 'Do nothing and make sure we time out''
2017-02-09 13:45:56 - INFO Socket: 'run skipped, test: 'Do nothing and make sure we time out', event: 'run_Do nothing and make sure we time out''
2017-02-09 13:45:56 - INFO Socket: 'run skipped, test: 'Do nothing and make sure we time out', event: 'run_Do nothing and make sure we time out''
2017-02-09 13:45:57 - INFO Socket: 'run skipped, test: 'Do nothing and make sure we time out', event: 'run_Do nothing and make sure we time out''
2017-02-09 13:45:57 - DEBUG UnitTestFramework: '#run ok: 'Do nothing and make sure we time out''
2017-02-09 13:45:57 - DEBUG UnitTestFramework: '#teardown: 'Do nothing and make sure we time out''
2017-02-09 13:45:57 - DEBUG UnitTestFramework: '#teardown ok: 'Do nothing and make sure we time out''
2017-02-09 13:45:57 - DEBUG UnitTestFramework: '#setup: 'Do something and make sure we time out''
2017-02-09 13:45:58 - DEBUG UnitTestFramework: '#setup ok: 'Do something and make sure we time out''
2017-02-09 13:45:58 - DEBUG UnitTestFramework: '#run: 'Do something and make sure we time out''
2017-02-09 13:45:59 - INFO Socket: 'run skipped, test: 'Do something and make sure we time out', event: 'run_Do something and make sure we time out''
2017-02-09 13:46:00 - INFO Socket: 'run skipped, test: 'Do something and make sure we time out', event: 'run_Do something and make sure we time out''
2017-02-09 13:46:00 - INFO Socket: 'run skipped, test: 'Do something and make sure we time out', event: 'run_Do something and make sure we time out''
2017-02-09 13:46:00 - DEBUG UnitTestFramework: '#run ok: 'Do something and make sure we time out''
2017-02-09 13:46:00 - DEBUG UnitTestFramework: '#teardown: 'Do something and make sure we time out''
2017-02-09 13:46:00 - DEBUG UnitTestFramework: '#teardown ok: 'Do something and make sure we time out''
2017-02-09 13:46:00 - DEBUG UnitTestFramework: '#setup: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:01 - DEBUG UnitTestFramework: '#setup ok: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:01 - DEBUG UnitTestFramework: '#run: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:03 - DEBUG UnitTestFramework: '#run ok: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:03 - DEBUG UnitTestFramework: '#teardown: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:04 - DEBUG UnitTestFramework: '#teardown ok: 'Start replicating and then catch error when server goes''
2017-02-09 13:46:04 - DEBUG UnitTestFramework: '#setup: 'Make sure clone works''
2017-02-09 13:46:05 - DEBUG UnitTestFramework: '#setup ok: 'Make sure clone works''
2017-02-09 13:46:05 - DEBUG UnitTestFramework: '#run: 'Make sure clone works''
2017-02-09 13:46:06 - DEBUG UnitTestFramework: '#run ok: 'Make sure clone works''
2017-02-09 13:46:06 - DEBUG UnitTestFramework: '#teardown: 'Make sure clone works''
2017-02-09 13:46:06 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure clone works''
2017-02-09 13:46:06 - DEBUG UnitTestFramework: '#setup: 'Coordinated replication action test''
2017-02-09 13:46:07 - DEBUG UnitTestFramework: '#setup ok: 'Coordinated replication action test''
2017-02-09 13:46:07 - DEBUG UnitTestFramework: '#run: 'Coordinated replication action test''
2017-02-09 13:46:11 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:11 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:11 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:11 - DEBUG UnitTestFramework: '#sync ok'
2017-02-09 13:46:12 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:13 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:13 - DEBUG UnitTestFramework: '#sync'
2017-02-09 13:46:13 - DEBUG UnitTestFramework: '#sync ok'
2017-02-09 13:46:14 - DEBUG UnitTestFramework: '#run ok: 'Coordinated replication action test''
2017-02-09 13:46:14 - DEBUG UnitTestFramework: '#teardown: 'Coordinated replication action test''
2017-02-09 13:46:15 - DEBUG UnitTestFramework: '#teardown ok: 'Coordinated replication action test''
2017-02-09 13:46:15 - DEBUG UnitTestFramework: '#setup: 'compareBufferArrays''
2017-02-09 13:46:15 - DEBUG UnitTestFramework: '#setup ok: 'compareBufferArrays''
2017-02-09 13:46:15 - DEBUG UnitTestFramework: '#run: 'compareBufferArrays''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#run ok: 'compareBufferArrays''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#teardown: 'compareBufferArrays''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#teardown ok: 'compareBufferArrays''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#setup: 'Call start twice and get error''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#setup ok: 'Call start twice and get error''
2017-02-09 13:46:17 - DEBUG UnitTestFramework: '#run: 'Call start twice and get error''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#run ok: 'Call start twice and get error''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#teardown: 'Call start twice and get error''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#teardown ok: 'Call start twice and get error''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#setup: 'Start and make sure it runs''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#setup ok: 'Start and make sure it runs''
2017-02-09 13:46:18 - DEBUG UnitTestFramework: '#run: 'Start and make sure it runs''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#run ok: 'Start and make sure it runs''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#teardown: 'Start and make sure it runs''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#teardown ok: 'Start and make sure it runs''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#setup: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#setup ok: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:19 - DEBUG UnitTestFramework: '#run: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#run ok: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#teardown: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure getTimeWhenRun is right after start''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#setup: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#setup ok: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:20 - DEBUG UnitTestFramework: '#run: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:21 - DEBUG UnitTestFramework: '#run ok: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:21 - DEBUG UnitTestFramework: '#teardown: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:22 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure getTimeWhenRun is -1 after function is called''
2017-02-09 13:46:22 - DEBUG UnitTestFramework: '#setup: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:22 - DEBUG UnitTestFramework: '#setup ok: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:22 - DEBUG UnitTestFramework: '#run: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#run ok: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#teardown: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#teardown ok: 'Make sure getTimeWhenRun is -2 when start has not been called and null if stop is called without running''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#setup: 'Test TransientState''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#setup ok: 'Test TransientState''
2017-02-09 13:46:23 - DEBUG UnitTestFramework: '#run: 'Test TransientState''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#run ok: 'Test TransientState''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#teardown: 'Test TransientState''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#teardown ok: 'Test TransientState''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#setup: 'No peers and empty database''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#setup ok: 'No peers and empty database''
2017-02-09 13:46:24 - DEBUG UnitTestFramework: '#run: 'No peers and empty database''
2017-02-09 13:46:25 - DEBUG UnitTestFramework: '#run ok: 'No peers and empty database''
2017-02-09 13:46:25 - DEBUG UnitTestFramework: '#teardown: 'No peers and empty database''
2017-02-09 13:46:26 - DEBUG UnitTestFramework: '#teardown ok: 'No peers and empty database''
2017-02-09 13:46:26 - DEBUG UnitTestFramework: '#setup: 'One peer and empty DB''
2017-02-09 13:46:26 - DEBUG UnitTestFramework: '#setup ok: 'One peer and empty DB''
2017-02-09 13:46:26 - DEBUG UnitTestFramework: '#run: 'One peer and empty DB''
2017-02-09 13:46:28 - DEBUG UnitTestFramework: '#run ok: 'One peer and empty DB''
2017-02-09 13:46:28 - DEBUG UnitTestFramework: '#teardown: 'One peer and empty DB''
2017-02-09 13:46:29 - DEBUG UnitTestFramework: '#teardown ok: 'One peer and empty DB''
2017-02-09 13:46:29 - DEBUG UnitTestFramework: '#setup: 'One peer with _Local set behind current seq''
2017-02-09 13:46:29 - DEBUG UnitTestFramework: '#setup ok: 'One peer with _Local set behind current seq''
2017-02-09 13:46:29 - DEBUG UnitTestFramework: '#run: 'One peer with _Local set behind current seq''
2017-02-09 13:46:30 - DEBUG UnitTestFramework: '#run ok: 'One peer with _Local set behind current seq''
2017-02-09 13:46:30 - DEBUG UnitTestFramework: '#teardown: 'One peer with _Local set behind current seq''
2017-02-09 13:46:31 - DEBUG UnitTestFramework: '#teardown ok: 'One peer with _Local set behind current seq''
2017-02-09 13:46:31 - DEBUG UnitTestFramework: '#setup: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:31 - DEBUG UnitTestFramework: '#setup ok: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:31 - DEBUG UnitTestFramework: '#run: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:33 - DEBUG UnitTestFramework: '#run ok: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:33 - DEBUG UnitTestFramework: '#teardown: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:34 - DEBUG UnitTestFramework: '#teardown ok: 'One peer with _Local set equal to current seq''
2017-02-09 13:46:34 - DEBUG UnitTestFramework: '#setup: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:34 - DEBUG UnitTestFramework: '#setup ok: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:34 - DEBUG UnitTestFramework: '#run: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:35 - DEBUG UnitTestFramework: '#run ok: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:35 - DEBUG UnitTestFramework: '#teardown: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:37 - DEBUG UnitTestFramework: '#teardown ok: 'One peer with _Local set ahead of current seq (and no this should not happen)''
2017-02-09 13:46:37 - DEBUG UnitTestFramework: '#setup: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:37 - DEBUG UnitTestFramework: '#setup ok: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:37 - DEBUG UnitTestFramework: '#run: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#run ok: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#teardown: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#teardown ok: 'Three peers, one not in DB, one behind and one ahead''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#setup: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#setup ok: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:38 - DEBUG UnitTestFramework: '#run: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:40 - DEBUG UnitTestFramework: '#run ok: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:40 - DEBUG UnitTestFramework: '#teardown: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:41 - DEBUG UnitTestFramework: '#teardown ok: 'More than maximum peers, make sure we only send maximum allowed''
2017-02-09 13:46:41 - DEBUG UnitTestFramework: '#setup: 'two peers with empty DB, update the doc''
2017-02-09 13:46:41 - DEBUG UnitTestFramework: '#setup ok: 'two peers with empty DB, update the doc''
2017-02-09 13:46:41 - DEBUG UnitTestFramework: '#run: 'two peers with empty DB, update the doc''
2017-02-09 13:46:42 - DEBUG UnitTestFramework: '#run ok: 'two peers with empty DB, update the doc''
2017-02-09 13:46:42 - DEBUG UnitTestFramework: '#teardown: 'two peers with empty DB, update the doc''
2017-02-09 13:46:43 - DEBUG UnitTestFramework: '#teardown ok: 'two peers with empty DB, update the doc''
2017-02-09 13:46:43 - DEBUG UnitTestFramework: '#setup: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:43 - DEBUG UnitTestFramework: '#setup ok: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:43 - DEBUG UnitTestFramework: '#run: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#run ok: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#teardown: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#teardown ok: 'add doc and make sure tokens refresh when they expire''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#setup: 'start and stop and start and stop''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#setup ok: 'start and stop and start and stop''
2017-02-09 13:46:45 - DEBUG UnitTestFramework: '#run: 'start and stop and start and stop''
2017-02-09 13:46:47 - DEBUG UnitTestFramework: '#run ok: 'start and stop and start and stop''
2017-02-09 13:46:47 - DEBUG UnitTestFramework: '#teardown: 'start and stop and start and stop''
2017-02-09 13:46:48 - DEBUG UnitTestFramework: '#teardown ok: 'start and stop and start and stop''
2017-02-09 13:46:48 - DEBUG UnitTestFramework: '#setup: 'two identical starts in a row''
2017-02-09 13:46:48 - DEBUG UnitTestFramework: '#setup ok: 'two identical starts in a row''
2017-02-09 13:46:48 - DEBUG UnitTestFramework: '#run: 'two identical starts in a row''
2017-02-09 13:46:49 - DEBUG UnitTestFramework: '#run ok: 'two identical starts in a row''
2017-02-09 13:46:49 - DEBUG UnitTestFramework: '#teardown: 'two identical starts in a row''
2017-02-09 13:46:50 - DEBUG UnitTestFramework: '#teardown ok: 'two identical starts in a row''
2017-02-09 13:46:50 - DEBUG UnitTestFramework: '#setup: 'two different starts in a row''
2017-02-09 13:46:50 - DEBUG UnitTestFramework: '#setup ok: 'two different starts in a row''
2017-02-09 13:46:50 - DEBUG UnitTestFramework: '#run: 'two different starts in a row''
2017-02-09 13:46:52 - DEBUG UnitTestFramework: '#run ok: 'two different starts in a row''
2017-02-09 13:46:52 - DEBUG UnitTestFramework: '#teardown: 'two different starts in a row''
2017-02-09 13:46:53 - DEBUG UnitTestFramework: '#teardown ok: 'two different starts in a row''
2017-02-09 13:46:53 - DEBUG UnitTestFramework: '#setup: 'two stops and a start and two stops''
2017-02-09 13:46:53 - DEBUG UnitTestFramework: '#setup ok: 'two stops and a start and two stops''
2017-02-09 13:46:53 - DEBUG UnitTestFramework: '#run: 'two stops and a start and two stops''
2017-02-09 13:46:54 - DEBUG UnitTestFramework: '#run ok: 'two stops and a start and two stops''
2017-02-09 13:46:54 - DEBUG UnitTestFramework: '#teardown: 'two stops and a start and two stops''
2017-02-09 13:46:55 - DEBUG UnitTestFramework: '#teardown ok: 'two stops and a start and two stops''
2017-02-09 13:46:55 - DEBUG UnitTestFramework: '#setup: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:55 - DEBUG UnitTestFramework: '#setup ok: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:55 - DEBUG UnitTestFramework: '#run: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:57 - DEBUG UnitTestFramework: '#run ok: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:57 - DEBUG UnitTestFramework: '#teardown: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:58 - DEBUG UnitTestFramework: '#teardown ok: 'we properly enqueue requests so no then needed''
2017-02-09 13:46:58 - DEBUG UnitTestFramework: '#setup: 'test calculateSeqPointKeyId''
2017-02-09 13:46:58 - DEBUG UnitTestFramework: '#setup ok: 'test calculateSeqPointKeyId''
2017-02-09 13:46:58 - DEBUG UnitTestFramework: '#run: 'test calculateSeqPointKeyId''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#run ok: 'test calculateSeqPointKeyId''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#teardown: 'test calculateSeqPointKeyId''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#teardown ok: 'test calculateSeqPointKeyId''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:46:59 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:47:00 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:47:00 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:47:00 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - server is not there''
2017-02-09 13:47:00 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:01 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:01 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - server accepts & closes connection''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:02 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - server always returns 500''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:03 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:06 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:06 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:07 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - create new seq doc''
2017-02-09 13:47:07 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:07 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:07 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:10 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:10 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:12 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - doc exists, need to get rev and update''
2017-02-09 13:47:12 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:12 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:12 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:16 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:16 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:17 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - update seq three times''
2017-02-09 13:47:17 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:17 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:17 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:21 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:21 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:22 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - rev got changed under us''
2017-02-09 13:47:22 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:22 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:22 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:23 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:23 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:24 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - fail if stop is called''
2017-02-09 13:47:24 - DEBUG UnitTestFramework: '#setup: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:24 - DEBUG UnitTestFramework: '#setup ok: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:24 - DEBUG UnitTestFramework: '#run: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:27 - DEBUG UnitTestFramework: '#run ok: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:27 - DEBUG UnitTestFramework: '#teardown: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:28 - DEBUG UnitTestFramework: '#teardown ok: '#_doImmediateSeqUpdate - stop after get but before put fails right''
2017-02-09 13:47:28 - DEBUG UnitTestFramework: '#setup: '#update - fail if stop is called''
2017-02-09 13:47:28 - DEBUG UnitTestFramework: '#setup ok: '#update - fail if stop is called''
2017-02-09 13:47:28 - DEBUG UnitTestFramework: '#run: '#update - fail if stop is called''
2017-02-09 13:47:29 - DEBUG UnitTestFramework: '#run ok: '#update - fail if stop is called''
2017-02-09 13:47:29 - DEBUG UnitTestFramework: '#teardown: '#update - fail if stop is called''
2017-02-09 13:47:30 - DEBUG UnitTestFramework: '#teardown ok: '#update - fail if stop is called''
2017-02-09 13:47:30 - DEBUG UnitTestFramework: '#setup: '#update - set seq for first time''
2017-02-09 13:47:30 - DEBUG UnitTestFramework: '#setup ok: '#update - set seq for first time''
2017-02-09 13:47:30 - DEBUG UnitTestFramework: '#run: '#update - set seq for first time''
2017-02-09 13:47:34 - DEBUG UnitTestFramework: '#run ok: '#update - set seq for first time''
2017-02-09 13:47:34 - DEBUG UnitTestFramework: '#teardown: '#update - set seq for first time''
2017-02-09 13:47:35 - DEBUG UnitTestFramework: '#teardown ok: '#update - set seq for first time''
2017-02-09 13:47:35 - DEBUG UnitTestFramework: '#setup: '#update - Fail on bad seq value''
2017-02-09 13:47:35 - DEBUG UnitTestFramework: '#setup ok: '#update - Fail on bad seq value''
2017-02-09 13:47:35 - DEBUG UnitTestFramework: '#run: '#update - Fail on bad seq value''
2017-02-09 13:47:38 - DEBUG UnitTestFramework: '#run ok: '#update - Fail on bad seq value''
2017-02-09 13:47:38 - DEBUG UnitTestFramework: '#teardown: '#update - Fail on bad seq value''
2017-02-09 13:47:39 - DEBUG UnitTestFramework: '#teardown ok: '#update - Fail on bad seq value''
2017-02-09 13:47:39 - DEBUG UnitTestFramework: '#setup: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:39 - DEBUG UnitTestFramework: '#setup ok: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:39 - DEBUG UnitTestFramework: '#run: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:43 - DEBUG UnitTestFramework: '#run ok: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:43 - DEBUG UnitTestFramework: '#teardown: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:44 - DEBUG UnitTestFramework: '#teardown ok: '#update - do we cancel timer properly on an immediate?''
2017-02-09 13:47:44 - DEBUG UnitTestFramework: '#setup: '#update - do we wait for blocked update''
2017-02-09 13:47:44 - DEBUG UnitTestFramework: '#setup ok: '#update - do we wait for blocked update''
2017-02-09 13:47:44 - DEBUG UnitTestFramework: '#run: '#update - do we wait for blocked update''
2017-02-09 13:47:48 - DEBUG UnitTestFramework: '#run ok: '#update - do we wait for blocked update''
2017-02-09 13:47:48 - DEBUG UnitTestFramework: '#teardown: '#update - do we wait for blocked update''
2017-02-09 13:47:49 - DEBUG UnitTestFramework: '#teardown ok: '#update - do we wait for blocked update''
2017-02-09 13:47:49 - DEBUG UnitTestFramework: '#setup: '#update - test that we wait long enough''
2017-02-09 13:47:49 - DEBUG UnitTestFramework: '#setup ok: '#update - test that we wait long enough''
2017-02-09 13:47:49 - DEBUG UnitTestFramework: '#run: '#update - test that we wait long enough''
2017-02-09 13:47:59 - DEBUG UnitTestFramework: '#run ok: '#update - test that we wait long enough''
2017-02-09 13:47:59 - DEBUG UnitTestFramework: '#teardown: '#update - test that we wait long enough''
2017-02-09 13:48:00 - DEBUG UnitTestFramework: '#teardown ok: '#update - test that we wait long enough''
2017-02-09 13:48:00 - DEBUG UnitTestFramework: '#setup: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:01 - DEBUG UnitTestFramework: '#setup ok: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:01 - DEBUG UnitTestFramework: '#run: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:11 - DEBUG UnitTestFramework: '#run ok: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:11 - DEBUG UnitTestFramework: '#teardown: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:12 - DEBUG UnitTestFramework: '#teardown ok: '#update - test that we pick up new sequences while we wait''
2017-02-09 13:48:12 - DEBUG UnitTestFramework: '#setup: 'Coordinated seq test''
2017-02-09 13:48:12 - DEBUG UnitTestFramework: '#setup ok: 'Coordinated seq test''
2017-02-09 13:48:12 - DEBUG UnitTestFramework: '#run: 'Coordinated seq test''
2017-02-09 13:48:12 - INFO Socket: 'run skipped, test: 'Coordinated seq test', event: 'run_Coordinated seq test''
2017-02-09 13:48:12 - INFO Socket: 'run skipped, test: 'Coordinated seq test', event: 'run_Coordinated seq test''
2017-02-09 13:48:13 - INFO Socket: 'run skipped, test: 'Coordinated seq test', event: 'run_Coordinated seq test''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#run ok: 'Coordinated seq test''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#teardown: 'Coordinated seq test''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#teardown ok: 'Coordinated seq test''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#setup: 'test thali manager spies''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#setup ok: 'test thali manager spies''
2017-02-09 13:48:13 - DEBUG UnitTestFramework: '#run: 'test thali manager spies''
2017-02-09 13:48:15 - DEBUG UnitTestFramework: '#run ok: 'test thali manager spies''
2017-02-09 13:48:15 - DEBUG UnitTestFramework: '#teardown: 'test thali manager spies''
2017-02-09 13:48:16 - DEBUG UnitTestFramework: '#teardown ok: 'test thali manager spies''
2017-02-09 13:48:16 - DEBUG UnitTestFramework: '#setup: 'test thali manager multiple starts and stops''
2017-02-09 13:48:16 - DEBUG UnitTestFramework: '#setup ok: 'test thali manager multiple starts and stops''
2017-02-09 13:48:16 - DEBUG UnitTestFramework: '#run: 'test thali manager multiple starts and stops''
2017-02-09 13:48:19 - DEBUG UnitTestFramework: '#run ok: 'test thali manager multiple starts and stops''
2017-02-09 13:48:19 - DEBUG UnitTestFramework: '#teardown: 'test thali manager multiple starts and stops''
2017-02-09 13:48:20 - DEBUG UnitTestFramework: '#teardown ok: 'test thali manager multiple starts and stops''
2017-02-09 13:48:20 - DEBUG UnitTestFramework: '#setup: 'test write''
2017-02-09 13:48:20 - DEBUG UnitTestFramework: '#setup ok: 'test write''
2017-02-09 13:48:20 - DEBUG UnitTestFramework: '#run: 'test write''
2017-02-09 13:48:29 - DEBUG UnitTestFramework: '#run ok: 'test write''
2017-02-09 13:48:29 - DEBUG UnitTestFramework: '#teardown: 'test write''
2017-02-09 13:48:38 - DEBUG UnitTestFramework: '#teardown ok: 'test write''
2017-02-09 13:48:38 - DEBUG UnitTestFramework: '#setup: 'test repeat write 1''
2017-02-09 13:48:40 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 1''
2017-02-09 13:48:40 - DEBUG UnitTestFramework: '#run: 'test repeat write 1''
2017-02-09 13:48:54 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 1''
2017-02-09 13:48:54 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 1''
2017-02-09 13:49:07 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 1''
2017-02-09 13:49:07 - DEBUG UnitTestFramework: '#setup: 'test repeat write 2''
2017-02-09 13:49:09 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 2''
2017-02-09 13:49:09 - DEBUG UnitTestFramework: '#run: 'test repeat write 2''
2017-02-09 13:49:24 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 2''
2017-02-09 13:49:24 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 2''
2017-02-09 13:49:37 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 2''
2017-02-09 13:49:37 - DEBUG UnitTestFramework: '#setup: 'test repeat write 3''
2017-02-09 13:49:39 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 3''
2017-02-09 13:49:39 - DEBUG UnitTestFramework: '#run: 'test repeat write 3''
2017-02-09 13:50:00 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 3''
2017-02-09 13:50:00 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 3''
2017-02-09 13:50:12 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 3''
2017-02-09 13:50:12 - DEBUG UnitTestFramework: '#setup: 'test repeat write 4''
2017-02-09 13:50:14 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 4''
2017-02-09 13:50:14 - DEBUG UnitTestFramework: '#run: 'test repeat write 4''
2017-02-09 13:50:35 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 4''
2017-02-09 13:50:35 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 4''
2017-02-09 13:50:47 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 4''
2017-02-09 13:50:47 - DEBUG UnitTestFramework: '#setup: 'test repeat write 5''
2017-02-09 13:50:48 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 5''
2017-02-09 13:50:48 - DEBUG UnitTestFramework: '#run: 'test repeat write 5''
2017-02-09 13:51:10 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 5''
2017-02-09 13:51:10 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 5''
2017-02-09 13:51:22 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 5''
2017-02-09 13:51:22 - DEBUG UnitTestFramework: '#setup: 'test repeat write 6''
2017-02-09 13:51:23 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 6''
2017-02-09 13:51:23 - DEBUG UnitTestFramework: '#run: 'test repeat write 6''
2017-02-09 13:51:52 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 6''
2017-02-09 13:51:52 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 6''
2017-02-09 13:52:05 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 6''
2017-02-09 13:52:05 - DEBUG UnitTestFramework: '#setup: 'test repeat write 7''
2017-02-09 13:52:06 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 7''
2017-02-09 13:52:06 - DEBUG UnitTestFramework: '#run: 'test repeat write 7''
2017-02-09 13:52:33 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 7''
2017-02-09 13:52:33 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 7''
2017-02-09 13:52:46 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 7''
2017-02-09 13:52:46 - DEBUG UnitTestFramework: '#setup: 'test repeat write 8''
2017-02-09 13:52:47 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 8''
2017-02-09 13:52:47 - DEBUG UnitTestFramework: '#run: 'test repeat write 8''
2017-02-09 13:53:13 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 8''
2017-02-09 13:53:13 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 8''
2017-02-09 13:53:26 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 8''
2017-02-09 13:53:26 - DEBUG UnitTestFramework: '#setup: 'test repeat write 9''
2017-02-09 13:53:28 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 9''
2017-02-09 13:53:28 - DEBUG UnitTestFramework: '#run: 'test repeat write 9''
2017-02-09 13:53:56 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 9''
2017-02-09 13:53:56 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 9''
2017-02-09 13:53:58 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 9''
2017-02-09 13:53:58 - DEBUG UnitTestFramework: '#setup: 'test repeat write 10''
2017-02-09 13:53:59 - DEBUG UnitTestFramework: '#setup ok: 'test repeat write 10''
2017-02-09 13:53:59 - DEBUG UnitTestFramework: '#run: 'test repeat write 10''
2017-02-09 13:54:45 - DEBUG UnitTestFramework: '#run ok: 'test repeat write 10''
2017-02-09 13:54:45 - DEBUG UnitTestFramework: '#teardown: 'test repeat write 10''
2017-02-09 13:54:55 - DEBUG UnitTestFramework: '#teardown ok: 'test repeat write 10''
2017-02-09 13:54:55 - DEBUG UnitTestFramework: '#setup: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:56 - DEBUG UnitTestFramework: '#setup ok: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:56 - DEBUG UnitTestFramework: '#run: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:58 - DEBUG UnitTestFramework: '#run ok: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:58 - DEBUG UnitTestFramework: '#teardown: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:59 - DEBUG UnitTestFramework: '#teardown ok: 'ssdp server should be restarted when wifi toggled''
2017-02-09 13:54:59 - DEBUG UnitTestFramework: 'all unit tests succeeded, platformName: 'ios''
2017-02-09 13:54:59 - DEBUG UnitTestFramework: 'skipped tests: '["onPeerLost calls jxcore","onPeerDiscovered calls jxcore","cannot call connect when start listening for advertisements is not active","Get error when trying to double connect to a peer on Android","#startUpdateAdvertisingAndListening - ending remote peers connection kills the local connection","#startUpdateAdvertisingAndListening - destroying remote peers connection kills the local connection","#startUpdateAdvertisingAndListening - destroying the local connection kills the connection to the remote peer","#startUpdateAdvertisingAndListening - ending the local connection kills the connection to the remote peer","Make sure we turn on and off the Android multicast locks","#start subscribes to the WiFi infrastructure events and #stop unsubscribes from them (in WiFi-only mode)","native available - peer with same port and different generation is cached (BLUETOOTH)","native available - peer with the same port and generation but with enough time for generation to wrap around is cached (BLUETOOTH)","networkChanged - fires peerAvailabilityChanged event for native peers (BLUETOOTH)","multiconnect failure - new peer is ignored (MPCF)","multiconnect failure - cached peer fires peerAvailabilityChanged (MPCF)","newAddressPort field (BLUETOOTH)","newAddressPort after listenerRecreatedAfterFailure event (BLUETOOTH)","#getPeerHostInfo - returns discovered cached native peer (BLUETOOTH)","#disconnect delegates native peers to the native wrapper","network changes emitted correctly","network changes not emitted in started state","network changes not emitted in stopped state","calls correct starts when network changes","We properly fire peer unavailable and then available when connection fails on Android","We properly fire peer unavailable and then available when connection fails on iOS","If a peer is not available (and hence is not in the thaliMobile cache) but we already started trying to connect make sure recreate does not happen","does not fire duplicate events after peer listener recreation","can get data from all participants","test for data corruption","We reject unrecognized action type","One action on bluetooth","Two notification actions","Replication goes first","Make sure docs replicate","Do nothing and make sure we time out","Do something and make sure we time out","Coordinated seq test"]''
2017-02-09 13:55:00 - DEBUG TestServer: 'completed'
2017-02-09 13:55:00 - INFO HttpServer: 'Socket to device name: 'Apple-Walter' disconnected, reason: 'undefined''
2017-02-09 13:55:00 - INFO HttpServer: 'Socket to device name: 'Apple-White' disconnected, reason: 'undefined''
2017-02-09 13:55:00 - INFO HttpServer: 'Socket to device name: 'Apple-Rockwell iPhone' disconnected, reason: 'undefined''
